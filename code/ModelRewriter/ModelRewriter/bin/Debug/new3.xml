<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC "-//Uppaal Team//DTD Flat System 1.1//EN" "http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd"[]>
<nta>
  <declaration>clock t;
const int heap_size = 10;
int H[heap_size];
int cp0;
int cp1;
int par0;
broadcast chan mainc;
broadcast chan DubTestc;
bool done = false;
bool opstack_fault = false;

</declaration>
  <template>
    <name>Sample_Sample</name>
    <declaration>const int os_size = 10;
int os[os_size]; 
int osp = 0;
int loc0 = 0;


void osp_inc(){
    if (osp &gt;= os_size - 1){
        opstack_fault = true;
        return;
    }
    osp++;
    return;
}

void osp_dec(int i){
    if (osp &lt; i){
        opstack_fault = true;
        return;
    }
    osp -= i;
    return;
}

bool ifcmpme(){
    if (osp &gt; 1){
        return os[osp-2] &gt;= os[osp - 1];
    }
    return false;
}</declaration>
    <location id="id-1" x="0" y="-52">
      <name x="20" y="-65">Sample</name>
      <label kind="invariant" x="-70" y="-52">t &lt;= 11</label>
    </location>
    <location id="id0" x="0" y="0">
      <name x="20" y="-13">pc0__aload_0</name>
      <label kind="invariant" x="-70" y="0">t &lt;= 1</label>
    </location>
    <location id="id1" x="0" y="52">
      <name x="20" y="39">pc1__invokespecial_void_java_lang_Object_init</name>
      <label kind="invariant" x="-70" y="52">t &lt;= 1</label>
    </location>
    <location id="id2" x="0" y="104">
      <name x="20" y="91">pc4__aload_0</name>
      <label kind="invariant" x="-70" y="104">t &lt;= 1</label>
    </location>
    <location id="id3" x="0" y="156">
      <name x="20" y="143">pc5__invokespecial_void_Sample_install</name>
      <label kind="invariant" x="-70" y="156">t &lt;= 1</label>
    </location>
    <location id="id4" x="0" y="208">
      <name x="20" y="195">pc8__return</name>
      <label kind="invariant" x="-70" y="208">t &lt;= 1</label>
    </location>
    <location id="id1a" x="200" y="78">
      <name x="220" y="65" />
      <label kind="invariant" x="130" y="78">t &lt;= 5</label>
    </location>
    <location id="id3a" x="200" y="182">
      <name x="220" y="169" />
      <label kind="invariant" x="130" y="182">t &lt;= 5</label>
    </location>
    <init ref="id-1" />
    <transition>
      <source ref="id-1" />
      <target ref="id0" />
      <label kind="guard" x="20" y="-52">t == 1</label>
      <label kind="synchronisation" x="20" y="-39">Samplec?</label>
      <label kind="assignment" x="20" y="-26">loc0 = par0, t = 0</label>
    </transition>
    <transition>
      <source ref="id-1" />
      <target ref="id-1" />
      <label kind="guard" x="20" y="-52">t == 11</label>
    </transition>
    <transition>
      <source ref="id0" />
      <target ref="id1" />
      <label kind="guard" x="20" y="0">t == 1</label>
      <label kind="assignment" x="20" y="13"> osp_inc(), os[osp - 1] = loc0, t = 0</label>
    </transition>
    <transition>
      <source ref="id1" />
      <target ref="id1a" />
      <label kind="guard" x="20" y="52">t == 1</label>
      <label kind="assignment" x="20" y="65">osp_dec(1), t = 0</label>
    </transition>
    <transition>
      <source ref="id1a" />
      <target ref="id1a" />
      <label kind="guard" x="20" y="78">t == 10</label>
    </transition>
    <transition>
      <source ref="id1a" />
      <target ref="id2" />
      <label kind="guard" x="20" y="78">t == 5</label>
      <label kind="assignment" x="20" y="91">t = 0</label>
    </transition>
    <transition>
      <source ref="id2" />
      <target ref="id3" />
      <label kind="guard" x="20" y="104">t == 1</label>
      <label kind="assignment" x="20" y="117"> osp_inc(), os[osp - 1] = loc0, t = 0</label>
    </transition>
    <transition>
      <source ref="id3" />
      <target ref="id3a" />
      <label kind="guard" x="20" y="156">t == 1</label>
      <label kind="assignment" x="20" y="169">osp_dec(1), t = 0</label>
    </transition>
    <transition>
      <source ref="id3a" />
      <target ref="id3a" />
      <label kind="guard" x="20" y="182">t == 10</label>
    </transition>
    <transition>
      <source ref="id3a" />
      <target ref="id4" />
      <label kind="guard" x="20" y="182">t == 5</label>
      <label kind="assignment" x="20" y="195">t = 0</label>
    </transition>
    <transition>
      <source ref="id4" />
      <target ref="id-1" />
      <label kind="guard" x="20" y="208">t == 1</label>
      <label kind="assignment" x="20" y="221">par0 = os[osp], osp = 0, t = 0, done = true</label>
    </transition>
  </template>
  <template>
    <name>Sample_Install</name>
    <declaration>const int os_size = 10;
int os[os_size]; 
int osp = 0;
int loc0 = 0;


void osp_inc(){
    if (osp &gt;= os_size - 1){
        opstack_fault = true;
        return;
    }
    osp++;
    return;
}

void osp_dec(int i){
    if (osp &lt; i){
        opstack_fault = true;
        return;
    }
    osp -= i;
    return;
}

bool ifcmpme(){
    if (osp &gt; 1){
        return os[osp-2] &gt;= os[osp - 1];
    }
    return false;
}</declaration>
    <location id="id-1" x="0" y="-52">
      <name x="20" y="-65">Install</name>
      <label kind="invariant" x="-70" y="-52">t &lt;= 11</label>
    </location>
    <location id="id0" x="0" y="0">
      <name x="20" y="-13">pc0__aload_0</name>
      <label kind="invariant" x="-70" y="0">t &lt;= 1</label>
    </location>
    <location id="id1" x="0" y="52">
      <name x="20" y="39">pc1__new_A</name>
      <label kind="invariant" x="-70" y="52">t &lt;= 1</label>
    </location>
    <location id="id2" x="0" y="104">
      <name x="20" y="91">pc4__dup</name>
      <label kind="invariant" x="-70" y="104">t &lt;= 1</label>
    </location>
    <location id="id3" x="0" y="156">
      <name x="20" y="143">pc5__invokespecial_void_A_init</name>
      <label kind="invariant" x="-70" y="156">t &lt;= 1</label>
    </location>
    <location id="id4" x="0" y="208">
      <name x="20" y="195">pc8__putfield_Sample_a__A</name>
      <label kind="invariant" x="-70" y="208">t &lt;= 1</label>
    </location>
    <location id="id5" x="0" y="260">
      <name x="20" y="247">pc11_aload_0</name>
      <label kind="invariant" x="-70" y="260">t &lt;= 1</label>
    </location>
    <location id="id6" x="0" y="312">
      <name x="20" y="299">pc12_new_B</name>
      <label kind="invariant" x="-70" y="312">t &lt;= 1</label>
    </location>
    <location id="id7" x="0" y="364">
      <name x="20" y="351">pc15_dup</name>
      <label kind="invariant" x="-70" y="364">t &lt;= 1</label>
    </location>
    <location id="id8" x="0" y="416">
      <name x="20" y="403">pc16_invokespecial_void_B_init</name>
      <label kind="invariant" x="-70" y="416">t &lt;= 1</label>
    </location>
    <location id="id9" x="0" y="468">
      <name x="20" y="455">pc19_putfield_Sample_b__A</name>
      <label kind="invariant" x="-70" y="468">t &lt;= 1</label>
    </location>
    <location id="id10" x="0" y="520">
      <name x="20" y="507">pc22_return</name>
      <label kind="invariant" x="-70" y="520">t &lt;= 1</label>
    </location>
    <location id="id3a" x="200" y="182">
      <name x="220" y="169" />
      <label kind="invariant" x="130" y="182">t &lt;= 5</label>
    </location>
    <location id="id8a" x="200" y="442">
      <name x="220" y="429" />
      <label kind="invariant" x="130" y="442">t &lt;= 5</label>
    </location>
    <init ref="id-1" />
    <transition>
      <source ref="id-1" />
      <target ref="id0" />
      <label kind="guard" x="20" y="-52">t == 1</label>
      <label kind="synchronisation" x="20" y="-39">Installc?</label>
      <label kind="assignment" x="20" y="-26">loc0 = par0, t = 0</label>
    </transition>
    <transition>
      <source ref="id-1" />
      <target ref="id-1" />
      <label kind="guard" x="20" y="-52">t == 11</label>
    </transition>
    <transition>
      <source ref="id0" />
      <target ref="id1" />
      <label kind="guard" x="20" y="0">t == 1</label>
      <label kind="assignment" x="20" y="13"> osp_inc(), os[osp - 1] = loc0, t = 0</label>
    </transition>
    <transition>
      <source ref="id1" />
      <target ref="id2" />
    </transition>
    <transition>
      <source ref="id2" />
      <target ref="id3" />
    </transition>
    <transition>
      <source ref="id3" />
      <target ref="id3a" />
      <label kind="guard" x="20" y="156">t == 1</label>
      <label kind="assignment" x="20" y="169">osp_dec(1), t = 0</label>
    </transition>
    <transition>
      <source ref="id3a" />
      <target ref="id3a" />
      <label kind="guard" x="20" y="182">t == 10</label>
    </transition>
    <transition>
      <source ref="id3a" />
      <target ref="id4" />
      <label kind="guard" x="20" y="182">t == 5</label>
      <label kind="assignment" x="20" y="195">t = 0</label>
    </transition>
    <transition>
      <source ref="id4" />
      <target ref="id5" />
    </transition>
    <transition>
      <source ref="id5" />
      <target ref="id6" />
      <label kind="guard" x="20" y="260">t == 1</label>
      <label kind="assignment" x="20" y="273"> osp_inc(), os[osp - 1] = loc0, t = 0</label>
    </transition>
    <transition>
      <source ref="id6" />
      <target ref="id7" />
    </transition>
    <transition>
      <source ref="id7" />
      <target ref="id8" />
    </transition>
    <transition>
      <source ref="id8" />
      <target ref="id8a" />
      <label kind="guard" x="20" y="416">t == 1</label>
      <label kind="assignment" x="20" y="429">osp_dec(1), t = 0</label>
    </transition>
    <transition>
      <source ref="id8a" />
      <target ref="id8a" />
      <label kind="guard" x="20" y="442">t == 10</label>
    </transition>
    <transition>
      <source ref="id8a" />
      <target ref="id9" />
      <label kind="guard" x="20" y="442">t == 5</label>
      <label kind="assignment" x="20" y="455">t = 0</label>
    </transition>
    <transition>
      <source ref="id9" />
      <target ref="id10" />
    </transition>
    <transition>
      <source ref="id10" />
      <target ref="id-1" />
      <label kind="guard" x="20" y="520">t == 1</label>
      <label kind="assignment" x="20" y="533">par0 = os[osp], osp = 0, t = 0, done = true</label>
    </transition>
  </template>
  <template>
    <name>Sample_main</name>
    <declaration>const int os_size = 10;
int os[os_size]; 
int osp = 0;
int loc0 = 0;


void osp_inc(){
    if (osp &gt;= os_size - 1){
        opstack_fault = true;
        return;
    }
    osp++;
    return;
}

void osp_dec(int i){
    if (osp &lt; i){
        opstack_fault = true;
        return;
    }
    osp -= i;
    return;
}

bool ifcmpme(){
    if (osp &gt; 1){
        return os[osp-2] &gt;= os[osp - 1];
    }
    return false;
}</declaration>
    <location id="id-1" x="0" y="-52">
      <name x="20" y="-65">main</name>
      <label kind="invariant" x="-70" y="-52">t &lt;= 11</label>
      <urgent />
    </location>
    <location id="id0" x="0" y="0">
      <name x="20" y="-13">pc0__new_Sample</name>
      <label kind="invariant" x="-70" y="0">t &lt;= 1</label>
    </location>
    <location id="id1" x="0" y="52">
      <name x="20" y="39">pc3__dup</name>
      <label kind="invariant" x="-70" y="52">t &lt;= 1</label>
    </location>
    <location id="id2" x="0" y="104">
      <name x="20" y="91">pc4__invokespecial_void_Sample_init</name>
      <label kind="invariant" x="-70" y="104">t &lt;= 1</label>
    </location>
    <location id="id3" x="0" y="156">
      <name x="20" y="143">pc7__astore_1</name>
      <label kind="invariant" x="-70" y="156">t &lt;= 1</label>
    </location>
    <location id="id4" x="0" y="208">
      <name x="20" y="195">pc8__return</name>
      <label kind="invariant" x="-70" y="208">t &lt;= 1</label>
    </location>
    <location id="id2a" x="200" y="130">
      <name x="220" y="117" />
      <label kind="invariant" x="130" y="130">t &lt;= 5</label>
    </location>
    <init ref="id-1" />
    <transition>
      <source ref="id-1" />
      <target ref="id0" />
      <label kind="assignment" x="20" y="-52">t = 0</label>
    </transition>
    <transition>
      <source ref="id0" />
      <target ref="id1" />
    </transition>
    <transition>
      <source ref="id1" />
      <target ref="id2" />
    </transition>
    <transition>
      <source ref="id2" />
      <target ref="id2a" />
      <label kind="guard" x="20" y="104">t == 1</label>
      <label kind="assignment" x="20" y="117">osp_dec(1), t = 0</label>
    </transition>
    <transition>
      <source ref="id2a" />
      <target ref="id2a" />
      <label kind="guard" x="20" y="130">t == 10</label>
    </transition>
    <transition>
      <source ref="id2a" />
      <target ref="id3" />
      <label kind="guard" x="20" y="130">t == 5</label>
      <label kind="assignment" x="20" y="143">t = 0</label>
    </transition>
    <transition>
      <source ref="id3" />
      <target ref="id4" />
    </transition>
    <transition>
      <source ref="id4" />
      <target ref="id-1" />
      <label kind="guard" x="20" y="208">t == 1</label>
      <label kind="assignment" x="20" y="221">par0 = os[osp], osp = 0, t = 0, done = true</label>
    </transition>
  </template>
  <template>
    <name>A_A</name>
    <declaration>const int os_size = 10;
int os[os_size]; 
int osp = 0;
int loc0 = 0;


void osp_inc(){
    if (osp &gt;= os_size - 1){
        opstack_fault = true;
        return;
    }
    osp++;
    return;
}

void osp_dec(int i){
    if (osp &lt; i){
        opstack_fault = true;
        return;
    }
    osp -= i;
    return;
}

bool ifcmpme(){
    if (osp &gt; 1){
        return os[osp-2] &gt;= os[osp - 1];
    }
    return false;
}</declaration>
    <location id="id-1" x="0" y="-52">
      <name x="20" y="-65">A</name>
      <label kind="invariant" x="-70" y="-52">t &lt;= 11</label>
    </location>
    <location id="id0" x="0" y="0">
      <name x="20" y="-13">pc0__aload_0</name>
      <label kind="invariant" x="-70" y="0">t &lt;= 1</label>
    </location>
    <location id="id1" x="0" y="52">
      <name x="20" y="39">pc1__invokespecial_void_java_lang_Object_init</name>
      <label kind="invariant" x="-70" y="52">t &lt;= 1</label>
    </location>
    <location id="id2" x="0" y="104">
      <name x="20" y="91">pc4__aload_0</name>
      <label kind="invariant" x="-70" y="104">t &lt;= 1</label>
    </location>
    <location id="id3" x="0" y="156">
      <name x="20" y="143">pc5__bipush_10</name>
      <label kind="invariant" x="-70" y="156">t &lt;= 1</label>
    </location>
    <location id="id4" x="0" y="208">
      <name x="20" y="195">pc7__putfield_A_value__int</name>
      <label kind="invariant" x="-70" y="208">t &lt;= 1</label>
    </location>
    <location id="id5" x="0" y="260">
      <name x="20" y="247">pc10_return</name>
      <label kind="invariant" x="-70" y="260">t &lt;= 1</label>
    </location>
    <location id="id1a" x="200" y="78">
      <name x="220" y="65" />
      <label kind="invariant" x="130" y="78">t &lt;= 5</label>
    </location>
    <init ref="id-1" />
    <transition>
      <source ref="id-1" />
      <target ref="id0" />
      <label kind="guard" x="20" y="-52">t == 1</label>
      <label kind="synchronisation" x="20" y="-39">Ac?</label>
      <label kind="assignment" x="20" y="-26">loc0 = par0, t = 0</label>
    </transition>
    <transition>
      <source ref="id-1" />
      <target ref="id-1" />
      <label kind="guard" x="20" y="-52">t == 11</label>
    </transition>
    <transition>
      <source ref="id0" />
      <target ref="id1" />
      <label kind="guard" x="20" y="0">t == 1</label>
      <label kind="assignment" x="20" y="13"> osp_inc(), os[osp - 1] = loc0, t = 0</label>
    </transition>
    <transition>
      <source ref="id1" />
      <target ref="id1a" />
      <label kind="guard" x="20" y="52">t == 1</label>
      <label kind="assignment" x="20" y="65">osp_dec(1), t = 0</label>
    </transition>
    <transition>
      <source ref="id1a" />
      <target ref="id1a" />
      <label kind="guard" x="20" y="78">t == 10</label>
    </transition>
    <transition>
      <source ref="id1a" />
      <target ref="id2" />
      <label kind="guard" x="20" y="78">t == 5</label>
      <label kind="assignment" x="20" y="91">t = 0</label>
    </transition>
    <transition>
      <source ref="id2" />
      <target ref="id3" />
      <label kind="guard" x="20" y="104">t == 1</label>
      <label kind="assignment" x="20" y="117"> osp_inc(), os[osp - 1] = loc0, t = 0</label>
    </transition>
    <transition>
      <source ref="id3" />
      <target ref="id4" />
    </transition>
    <transition>
      <source ref="id4" />
      <target ref="id5" />
    </transition>
    <transition>
      <source ref="id5" />
      <target ref="id-1" />
      <label kind="guard" x="20" y="260">t == 1</label>
      <label kind="assignment" x="20" y="273">par0 = os[osp], osp = 0, t = 0, done = true</label>
    </transition>
  </template>
  <template>
    <name>A_foo</name>
    <declaration>const int os_size = 10;
int os[os_size]; 
int osp = 0;
int loc0 = 0;


void osp_inc(){
    if (osp &gt;= os_size - 1){
        opstack_fault = true;
        return;
    }
    osp++;
    return;
}

void osp_dec(int i){
    if (osp &lt; i){
        opstack_fault = true;
        return;
    }
    osp -= i;
    return;
}

bool ifcmpme(){
    if (osp &gt; 1){
        return os[osp-2] &gt;= os[osp - 1];
    }
    return false;
}</declaration>
    <location id="id-1" x="0" y="-52">
      <name x="20" y="-65">foo</name>
      <label kind="invariant" x="-70" y="-52">t &lt;= 11</label>
    </location>
    <location id="id0" x="0" y="0">
      <name x="20" y="-13">pc0__iconst_2</name>
      <label kind="invariant" x="-70" y="0">t &lt;= 1</label>
    </location>
    <location id="id1" x="0" y="52">
      <name x="20" y="39">pc1__ireturn</name>
      <label kind="invariant" x="-70" y="52">t &lt;= 1</label>
    </location>
    <init ref="id-1" />
    <transition>
      <source ref="id-1" />
      <target ref="id0" />
      <label kind="guard" x="20" y="-52">t == 1</label>
      <label kind="synchronisation" x="20" y="-39">fooc?</label>
      <label kind="assignment" x="20" y="-26">loc0 = par0, t = 0</label>
    </transition>
    <transition>
      <source ref="id-1" />
      <target ref="id-1" />
      <label kind="guard" x="20" y="-52">t == 11</label>
    </transition>
    <transition>
      <source ref="id0" />
      <target ref="id1" />
      <label kind="guard" x="20" y="0">t == 1</label>
      <label kind="assignment" x="20" y="13">osp_inc(), os[osp-1] = 2, t = 0</label>
    </transition>
    <transition>
      <source ref="id1" />
      <target ref="id-1" />
      <label kind="guard" x="20" y="52">t == 1</label>
      <label kind="assignment" x="20" y="65">par0 = os[osp], osp = 0, t = 0, done = true</label>
    </transition>
  </template>
  <template>
    <name>B_B</name>
    <declaration>const int os_size = 10;
int os[os_size]; 
int osp = 0;
int loc0 = 0;


void osp_inc(){
    if (osp &gt;= os_size - 1){
        opstack_fault = true;
        return;
    }
    osp++;
    return;
}

void osp_dec(int i){
    if (osp &lt; i){
        opstack_fault = true;
        return;
    }
    osp -= i;
    return;
}

bool ifcmpme(){
    if (osp &gt; 1){
        return os[osp-2] &gt;= os[osp - 1];
    }
    return false;
}</declaration>
    <location id="id-1" x="0" y="-52">
      <name x="20" y="-65">B</name>
      <label kind="invariant" x="-70" y="-52">t &lt;= 11</label>
    </location>
    <location id="id0" x="0" y="0">
      <name x="20" y="-13">pc0__aload_0</name>
      <label kind="invariant" x="-70" y="0">t &lt;= 1</label>
    </location>
    <location id="id1" x="0" y="52">
      <name x="20" y="39">pc1__invokespecial_void_A_init</name>
      <label kind="invariant" x="-70" y="52">t &lt;= 1</label>
    </location>
    <location id="id2" x="0" y="104">
      <name x="20" y="91">pc4__aload_0</name>
      <label kind="invariant" x="-70" y="104">t &lt;= 1</label>
    </location>
    <location id="id3" x="0" y="156">
      <name x="20" y="143">pc5__new_A</name>
      <label kind="invariant" x="-70" y="156">t &lt;= 1</label>
    </location>
    <location id="id4" x="0" y="208">
      <name x="20" y="195">pc8__dup</name>
      <label kind="invariant" x="-70" y="208">t &lt;= 1</label>
    </location>
    <location id="id5" x="0" y="260">
      <name x="20" y="247">pc9__invokespecial_void_A_init</name>
      <label kind="invariant" x="-70" y="260">t &lt;= 1</label>
    </location>
    <location id="id6" x="0" y="312">
      <name x="20" y="299">pc12_putfield_B_a__A</name>
      <label kind="invariant" x="-70" y="312">t &lt;= 1</label>
    </location>
    <location id="id7" x="0" y="364">
      <name x="20" y="351">pc15_return</name>
      <label kind="invariant" x="-70" y="364">t &lt;= 1</label>
    </location>
    <location id="id1a" x="200" y="78">
      <name x="220" y="65" />
      <label kind="invariant" x="130" y="78">t &lt;= 5</label>
    </location>
    <location id="id5a" x="200" y="286">
      <name x="220" y="273" />
      <label kind="invariant" x="130" y="286">t &lt;= 5</label>
    </location>
    <init ref="id-1" />
    <transition>
      <source ref="id-1" />
      <target ref="id0" />
      <label kind="guard" x="20" y="-52">t == 1</label>
      <label kind="synchronisation" x="20" y="-39">Bc?</label>
      <label kind="assignment" x="20" y="-26">loc0 = par0, t = 0</label>
    </transition>
    <transition>
      <source ref="id-1" />
      <target ref="id-1" />
      <label kind="guard" x="20" y="-52">t == 11</label>
    </transition>
    <transition>
      <source ref="id0" />
      <target ref="id1" />
      <label kind="guard" x="20" y="0">t == 1</label>
      <label kind="assignment" x="20" y="13"> osp_inc(), os[osp - 1] = loc0, t = 0</label>
    </transition>
    <transition>
      <source ref="id1" />
      <target ref="id1a" />
      <label kind="guard" x="20" y="52">t == 1</label>
      <label kind="assignment" x="20" y="65">osp_dec(1), t = 0</label>
    </transition>
    <transition>
      <source ref="id1a" />
      <target ref="id1a" />
      <label kind="guard" x="20" y="78">t == 10</label>
    </transition>
    <transition>
      <source ref="id1a" />
      <target ref="id2" />
      <label kind="guard" x="20" y="78">t == 5</label>
      <label kind="assignment" x="20" y="91">t = 0</label>
    </transition>
    <transition>
      <source ref="id2" />
      <target ref="id3" />
      <label kind="guard" x="20" y="104">t == 1</label>
      <label kind="assignment" x="20" y="117"> osp_inc(), os[osp - 1] = loc0, t = 0</label>
    </transition>
    <transition>
      <source ref="id3" />
      <target ref="id4" />
    </transition>
    <transition>
      <source ref="id4" />
      <target ref="id5" />
    </transition>
    <transition>
      <source ref="id5" />
      <target ref="id5a" />
      <label kind="guard" x="20" y="260">t == 1</label>
      <label kind="assignment" x="20" y="273">osp_dec(1), t = 0</label>
    </transition>
    <transition>
      <source ref="id5a" />
      <target ref="id5a" />
      <label kind="guard" x="20" y="286">t == 10</label>
    </transition>
    <transition>
      <source ref="id5a" />
      <target ref="id6" />
      <label kind="guard" x="20" y="286">t == 5</label>
      <label kind="assignment" x="20" y="299">t = 0</label>
    </transition>
    <transition>
      <source ref="id6" />
      <target ref="id7" />
    </transition>
    <transition>
      <source ref="id7" />
      <target ref="id-1" />
      <label kind="guard" x="20" y="364">t == 1</label>
      <label kind="assignment" x="20" y="377">par0 = os[osp], osp = 0, t = 0, done = true</label>
    </transition>
  </template>
  <template>
    <name>B_foo</name>
    <declaration>const int os_size = 10;
int os[os_size]; 
int osp = 0;
int loc0 = 0;


void osp_inc(){
    if (osp &gt;= os_size - 1){
        opstack_fault = true;
        return;
    }
    osp++;
    return;
}

void osp_dec(int i){
    if (osp &lt; i){
        opstack_fault = true;
        return;
    }
    osp -= i;
    return;
}

bool ifcmpme(){
    if (osp &gt; 1){
        return os[osp-2] &gt;= os[osp - 1];
    }
    return false;
}</declaration>
    <location id="id-1" x="0" y="-52">
      <name x="20" y="-65">foo</name>
      <label kind="invariant" x="-70" y="-52">t &lt;= 11</label>
    </location>
    <location id="id0" x="0" y="0">
      <name x="20" y="-13">pc0__iconst_3</name>
      <label kind="invariant" x="-70" y="0">t &lt;= 1</label>
    </location>
    <location id="id1" x="0" y="52">
      <name x="20" y="39">pc1__ireturn</name>
      <label kind="invariant" x="-70" y="52">t &lt;= 1</label>
    </location>
    <init ref="id-1" />
    <transition>
      <source ref="id-1" />
      <target ref="id0" />
      <label kind="guard" x="20" y="-52">t == 1</label>
      <label kind="synchronisation" x="20" y="-39">fooc?</label>
      <label kind="assignment" x="20" y="-26">loc0 = par0, t = 0</label>
    </transition>
    <transition>
      <source ref="id-1" />
      <target ref="id-1" />
      <label kind="guard" x="20" y="-52">t == 11</label>
    </transition>
    <transition>
      <source ref="id0" />
      <target ref="id1" />
      <label kind="guard" x="20" y="0">t == 1</label>
      <label kind="assignment" x="20" y="13">osp_inc(), os[osp-1] = 3, t = 0</label>
    </transition>
    <transition>
      <source ref="id1" />
      <target ref="id-1" />
      <label kind="guard" x="20" y="52">t == 1</label>
      <label kind="assignment" x="20" y="65">par0 = os[osp], osp = 0, t = 0, done = true</label>
    </transition>
  </template>
  <system>s = main();
s1 = DubTest();
system s, s1;</system>
  <queries>&lt;formula&gt;Pr[&lt;= 50] (&lt;&gt; done)
            &lt;/formula&gt;
            &lt;comment&gt;
            &lt;/comment&gt;</queries>
</nta>