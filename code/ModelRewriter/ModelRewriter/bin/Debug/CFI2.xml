<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC "-//Uppaal Team//DTD Flat System 1.1//EN" "http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd"[]>
<nta>
  <declaration>clock t;
bool exceptionOccurred;
const int heap_size = 10;
int H[heap_size];
int cp0= 5;
int cp1= 6;
int cp2= 7;
int par0;
int par1;
int par2;
broadcast chan cExampleCFI_isInvalid;
broadcast chan cExampleCFI_ExampleCFI;
broadcast chan cExampleCFI_processVerifyPIN;
broadcast chan cExampleCFI_main;
broadcast chan cExampleCFI_getTriesRemaining;
broadcast chan cExampleCFI_setIncomingAndReceive;
bool opstack_fault = false;
const int classFields[4] = {0, 3, 1, 1};

int heapPointer = 1;
int alocNew(int classID){
    int ref = heapPointer;
    if(classID &lt; 0) return -1;
    H[ref] = classID;
    heapPointer += classFields[classID];
    return ref;
}

</declaration>
  <template>
    <name>ExampleCFI_isInvalid</name>
    <declaration>const int os_size = 10;
const int locs_size = 10;
int os[os_size]; 
int osp = 0;
int locs[locs_size];

void osp_inc(){
    if (osp &gt;= os_size - 1){
        opstack_fault = true;
        return;
    }
    osp++;
    return;
}

void osp_dec(int i){
    if (osp &lt; i){
        opstack_fault = true;
        return;
    }
    osp -= i;
    return;
}

bool ifcmpme(){
    if (osp &gt; 1){
        return os[osp-2] &gt;= os[osp - 1];
    }
    return false;
}

bool ifcmpeq(){
    if (osp &gt; 1){
        return os[osp-2] == os[osp - 1];
    }
    return false;
}

bool ifcmpge(){
    if (osp &gt; 1){
        return os[osp - 2] &gt;= os[osp - 1] ;
    }
    return false;
}

bool ifcmpne(){
    if (osp &gt; 1){
        return os[osp - 2] != os[osp - 1] ;
    }
    return false;
}


bool ifeq(){
    if (osp &gt; 0){
        return os[osp - 1] == 0;
    }
    return false;
}</declaration>
    <location id="id-1" x="0" y="-65">
      <name x="20" y="-78">isInvalid</name>
      <label kind="exponentialrate" x="-70" y="-65">1</label>
    </location>
    <location id="id0" x="0" y="0">
      <name x="20" y="-13">pc0__getstatic_ExampleCFI_flag___int</name>
      <label kind="invariant" x="-70" y="0">t &lt;= 1</label>
    </location>
    <location id="id1" x="0" y="65">
      <name x="20" y="52">pc3__iconst_1</name>
      <label kind="invariant" x="-70" y="65">t &lt;= 1</label>
    </location>
    <location id="id2" x="0" y="130">
      <name x="20" y="117">pc4__iadd</name>
      <label kind="invariant" x="-70" y="130">t &lt;= 1</label>
    </location>
    <location id="id3" x="0" y="195">
      <name x="20" y="182">pc5__putstatic_ExampleCFI_flag___int</name>
      <label kind="invariant" x="-70" y="195">t &lt;= 1</label>
    </location>
    <location id="id4" x="0" y="260">
      <name x="20" y="247">pc8__iconst_1</name>
      <label kind="invariant" x="-70" y="260">t &lt;= 1</label>
    </location>
    <location id="id5" x="0" y="325">
      <name x="20" y="312">pc9__ireturn</name>
      <label kind="invariant" x="-70" y="325">t &lt;= 1</label>
    </location>
    <init ref="id-1" />
    <transition>
      <source ref="id-1" />
      <target ref="id0" />
      <label kind="guard" x="20" y="-65">t == 1</label>
      <label kind="synchronisation" x="20" y="-52">cExampleCFI_isInvalid?</label>
      <label kind="assignment" x="20" y="-39">locs[0] = par0, t = 0</label>
    </transition>
    <transition>
      <source ref="id0" />
      <target ref="id1" />
      <label kind="guard" x="20" y="0">t == 1</label>
      <label kind="assignment" x="20" y="13">osp_inc(), os[osp-1] = H[cp0], t = 0</label>
    </transition>
    <transition>
      <source ref="id1" />
      <target ref="id2" />
      <label kind="guard" x="20" y="65">t == 1</label>
      <label kind="assignment" x="20" y="78">osp_inc(), os[osp - 1] = 1, t = 0</label>
    </transition>
    <transition>
      <source ref="id2" />
      <target ref="id3" />
      <label kind="guard" x="20" y="130">t == 1</label>
      <label kind="assignment" x="20" y="143">osp_dec(2), osp_inc(), os[osp - 1] = os[osp - 1] + os[osp], t = 0</label>
    </transition>
    <transition>
      <source ref="id3" />
      <target ref="id4" />
      <label kind="guard" x="20" y="195">t == 1</label>
      <label kind="assignment" x="20" y="208">osp_dec(1), H[cp0] = os[osp], t = 0</label>
    </transition>
    <transition>
      <source ref="id4" />
      <target ref="id5" />
      <label kind="guard" x="20" y="260">t == 1</label>
      <label kind="assignment" x="20" y="273">osp_inc(), os[osp - 1] = 1, t = 0</label>
    </transition>
    <transition>
      <source ref="id5" />
      <target ref="id-1" />
      <label kind="guard" x="20" y="325">t == 1</label>
      <label kind="synchronisation" x="20" y="338">cExampleCFI_isInvalid!</label>
      <label kind="guard" x="20" y="351">t == 1</label>
      <label kind="assignment" x="20" y="364">osp_dec(1), par0 = os[osp], osp = 0, t = 0</label>
      <nail x="-100" y="130" />
    </transition>
  </template>
  <template>
    <name>ExampleCFI_ExampleCFI</name>
    <declaration>const int os_size = 10;
const int locs_size = 10;
int os[os_size]; 
int osp = 0;
int locs[locs_size];

void osp_inc(){
    if (osp &gt;= os_size - 1){
        opstack_fault = true;
        return;
    }
    osp++;
    return;
}

void osp_dec(int i){
    if (osp &lt; i){
        opstack_fault = true;
        return;
    }
    osp -= i;
    return;
}

bool ifcmpme(){
    if (osp &gt; 1){
        return os[osp-2] &gt;= os[osp - 1];
    }
    return false;
}

bool ifcmpeq(){
    if (osp &gt; 1){
        return os[osp-2] == os[osp - 1];
    }
    return false;
}

bool ifcmpge(){
    if (osp &gt; 1){
        return os[osp - 2] &gt;= os[osp - 1] ;
    }
    return false;
}

bool ifcmpne(){
    if (osp &gt; 1){
        return os[osp - 2] != os[osp - 1] ;
    }
    return false;
}


bool ifeq(){
    if (osp &gt; 0){
        return os[osp - 1] == 0;
    }
    return false;
}</declaration>
    <location id="id-1" x="0" y="-65">
      <name x="20" y="-78">ExampleCFI</name>
      <label kind="exponentialrate" x="-70" y="-65">1</label>
    </location>
    <location id="id0" x="0" y="0">
      <name x="20" y="-13">pc0__aload_0</name>
      <label kind="invariant" x="-70" y="0">t &lt;= 1</label>
    </location>
    <location id="id1" x="0" y="65">
      <name x="20" y="52">pc1__invokespecial_void_java_lang_Object_init_</name>
      <label kind="invariant" x="-70" y="65">t &lt;= 1</label>
    </location>
    <location id="id2" x="0" y="130">
      <name x="20" y="117">pc4__aload_0</name>
      <label kind="invariant" x="-70" y="130">t &lt;= 1</label>
    </location>
    <location id="id3" x="0" y="195">
      <name x="20" y="182">pc5__invokespecial_void_ExampleCFI_processVerifyPIN_</name>
      <label kind="invariant" x="-70" y="195">t &lt;= 1</label>
    </location>
    <location id="id4" x="0" y="260">
      <name x="20" y="247">pc8__getstatic_ExampleCFI_flag___int</name>
      <label kind="invariant" x="-70" y="260">t &lt;= 1</label>
    </location>
    <location id="id5" x="0" y="325">
      <name x="20" y="312">pc11__iconst_5</name>
      <label kind="invariant" x="-70" y="325">t &lt;= 1</label>
    </location>
    <location id="id6" x="0" y="390">
      <name x="20" y="377">pc12__ifcmpeq_11</name>
      <label kind="invariant" x="-70" y="390">t &lt;= 1</label>
    </location>
    <location id="id7" x="0" y="455">
      <name x="20" y="442">pc15__new_java_lang_Exception</name>
      <label kind="invariant" x="-70" y="455">t &lt;= 1</label>
    </location>
    <location id="id8" x="0" y="520">
      <name x="20" y="507">pc18__dup</name>
      <label kind="invariant" x="-70" y="520">t &lt;= 1</label>
    </location>
    <location id="id9" x="0" y="585">
      <name x="20" y="572">pc19__invokespecial_void_java_lang_Exception_init_</name>
      <label kind="invariant" x="-70" y="585">t &lt;= 1</label>
    </location>
    <location id="id10" x="0" y="650">
      <name x="20" y="637">pc22__athrow</name>
      <label kind="invariant" x="-70" y="650">t &lt;= 1</label>
    </location>
    <location id="id11" x="0" y="715">
      <name x="20" y="702">pc23__return</name>
      <label kind="invariant" x="-70" y="715">t &lt;= 1</label>
    </location>
    <location id="id1a" x="200" y="91">
      <name x="220" y="78" />
      <label kind="invariant" x="0" y="0">t &lt;= 5</label>
    </location>
    <location id="id3a" x="200" y="221">
      <name x="220" y="208" />
      <label kind="exponentialrate" x="130" y="221">1</label>
    </location>
    <location id="id3aa" x="200" y="247">
      <name x="220" y="234" />
      <label kind="exponentialrate" x="130" y="247">1</label>
      <urgent />
    </location>
    <location id="id9a" x="200" y="611">
      <name x="220" y="598" />
      <label kind="invariant" x="0" y="0">t &lt;= 5</label>
    </location>
    <location id="id10a" x="200" y="676">
      <name x="220" y="663" />
      <label kind="exponentialrate" x="130" y="676">1</label>
      <urgent />
    </location>
    <init ref="id-1" />
    <transition>
      <source ref="id-1" />
      <target ref="id0" />
      <label kind="guard" x="20" y="-65">t == 1</label>
      <label kind="synchronisation" x="20" y="-52">cExampleCFI_ExampleCFI?</label>
      <label kind="assignment" x="20" y="-39">locs[0] = par0, t = 0</label>
    </transition>
    <transition>
      <source ref="id0" />
      <target ref="id1" />
      <label kind="guard" x="20" y="0">t == 1</label>
      <label kind="assignment" x="20" y="13"> osp_inc(), os[osp - 1] = locs[0], t = 0</label>
    </transition>
    <transition>
      <source ref="id1" />
      <target ref="id1a" />
      <label kind="guard" x="20" y="65">t == 1</label>
      <label kind="assignment" x="20" y="78">osp_dec(1), t = 0</label>
    </transition>
    <transition>
      <source ref="id1a" />
      <target ref="id2" />
      <label kind="guard" x="20" y="91">t == 5</label>
      <label kind="assignment" x="20" y="104">t = 0</label>
    </transition>
    <transition>
      <source ref="id2" />
      <target ref="id3" />
      <label kind="guard" x="20" y="130">t == 1</label>
      <label kind="assignment" x="20" y="143"> osp_inc(), os[osp - 1] = locs[0], t = 0</label>
    </transition>
    <transition>
      <source ref="id3" />
      <target ref="id3a" />
      <label kind="guard" x="20" y="195">t == 1</label>
      <label kind="assignment" x="20" y="208">osp_dec(1), t = 0, par0 = os[osp]</label>
      <label kind="synchronisation" x="20" y="221">cExampleCFI_processVerifyPIN!</label>
    </transition>
    <transition>
      <source ref="id3a" />
      <target ref="id4" />
      <label kind="synchronisation" x="20" y="221">cExampleCFI_processVerifyPIN?</label>
      <label kind="guard" x="20" y="234">!exceptionOccurred</label>
      <label kind="assignment" x="20" y="247">t = 0</label>
    </transition>
    <transition>
      <source ref="id3a" />
      <target ref="id3aa" />
      <label kind="guard" x="20" y="221">exceptionOccurred == true</label>
      <label kind="assignment" x="20" y="234">osp = 0</label>
      <label kind="synchronisation" x="20" y="247">cExampleCFI_processVerifyPIN?</label>
    </transition>
    <transition>
      <source ref="id3aa" />
      <target ref="id-1" />
      <label kind="synchronisation" x="20" y="247">cExampleCFI_ExampleCFI!</label>
    </transition>
    <transition>
      <source ref="id4" />
      <target ref="id5" />
      <label kind="guard" x="20" y="260">t == 1</label>
      <label kind="assignment" x="20" y="273">osp_inc(), os[osp-1] = H[cp0], t = 0</label>
    </transition>
    <transition>
      <source ref="id5" />
      <target ref="id6" />
      <label kind="guard" x="20" y="325">t == 1</label>
      <label kind="assignment" x="20" y="338">osp_inc(), os[osp - 1] = 5, t = 0</label>
    </transition>
    <transition>
      <source ref="id6" />
      <target ref="id11" />
      <label kind="guard" x="20" y="390">t == 1 &amp;&amp; ifcmpeq()</label>
      <label kind="assignment" x="20" y="403">osp_dec(2), t = 0</label>
      <nail x="-50" y="552" />
    </transition>
    <transition>
      <source ref="id6" />
      <target ref="id7" />
      <label kind="guard" x="20" y="390">t == 1 &amp;&amp; !ifcmpeq()</label>
      <label kind="assignment" x="20" y="403">opstack_fault = osp &lt; 2 ? true : opstack_fault, osp_dec(2), t = 0</label>
    </transition>
    <transition>
      <source ref="id7" />
      <target ref="id8" />
      <label kind="guard" x="20" y="455">t == 1</label>
      <label kind="assignment" x="20" y="468">osp_inc(), os[osp-1] = alocNew(-1), t = 0</label>
    </transition>
    <transition>
      <source ref="id8" />
      <target ref="id9" />
      <label kind="assignment" x="20" y="520">osp_dec(1), osp_inc(), osp_inc(), os[osp - 1] = os[osp - 2]</label>
      <label kind="guard" x="20" y="533">t == 1</label>
    </transition>
    <transition>
      <source ref="id9" />
      <target ref="id9a" />
      <label kind="guard" x="20" y="585">t == 1</label>
      <label kind="assignment" x="20" y="598">osp_dec(1), t = 0</label>
    </transition>
    <transition>
      <source ref="id9a" />
      <target ref="id10" />
      <label kind="guard" x="20" y="611">t == 5</label>
      <label kind="assignment" x="20" y="624">t = 0</label>
    </transition>
    <transition>
      <source ref="id10" />
      <target ref="id10a" />
      <label kind="guard" x="20" y="650">t == 1</label>
      <label kind="assignment" x="20" y="663">exceptionOccurred = true</label>
    </transition>
    <transition>
      <source ref="id10a" />
      <target ref="id-1" />
      <label kind="synchronisation" x="20" y="676">cExampleCFI_ExampleCFI!</label>
    </transition>
    <transition>
      <source ref="id11" />
      <target ref="id-1" />
      <label kind="guard" x="20" y="715">t == 1</label>
      <label kind="synchronisation" x="20" y="728">cExampleCFI_ExampleCFI!</label>
      <label kind="guard" x="20" y="741">t == 1</label>
      <label kind="assignment" x="20" y="754">osp = 0, t = 0</label>
      <nail x="-100" y="325" />
    </transition>
  </template>
  <template>
    <name>ExampleCFI_processVerifyPIN</name>
    <declaration>const int os_size = 10;
const int locs_size = 10;
int os[os_size]; 
int osp = 0;
int locs[locs_size];

void osp_inc(){
    if (osp &gt;= os_size - 1){
        opstack_fault = true;
        return;
    }
    osp++;
    return;
}

void osp_dec(int i){
    if (osp &lt; i){
        opstack_fault = true;
        return;
    }
    osp -= i;
    return;
}

bool ifcmpme(){
    if (osp &gt; 1){
        return os[osp-2] &gt;= os[osp - 1];
    }
    return false;
}

bool ifcmpeq(){
    if (osp &gt; 1){
        return os[osp-2] == os[osp - 1];
    }
    return false;
}

bool ifcmpge(){
    if (osp &gt; 1){
        return os[osp - 2] &gt;= os[osp - 1] ;
    }
    return false;
}

bool ifcmpne(){
    if (osp &gt; 1){
        return os[osp - 2] != os[osp - 1] ;
    }
    return false;
}


bool ifeq(){
    if (osp &gt; 0){
        return os[osp - 1] == 0;
    }
    return false;
}</declaration>
    <location id="id-1" x="0" y="-65">
      <name x="20" y="-78">processVerifyPIN</name>
      <label kind="exponentialrate" x="-70" y="-65">1</label>
    </location>
    <location id="id0" x="0" y="0">
      <name x="20" y="-13">pc0__getstatic_ExampleCFI_flag___int</name>
      <label kind="invariant" x="-70" y="0">t &lt;= 1</label>
    </location>
    <location id="id1" x="0" y="65">
      <name x="20" y="52">pc3__iconst_1</name>
      <label kind="invariant" x="-70" y="65">t &lt;= 1</label>
    </location>
    <location id="id2" x="0" y="130">
      <name x="20" y="117">pc4__iadd</name>
      <label kind="invariant" x="-70" y="130">t &lt;= 1</label>
    </location>
    <location id="id3" x="0" y="195">
      <name x="20" y="182">pc5__putstatic_ExampleCFI_flag___int</name>
      <label kind="invariant" x="-70" y="195">t &lt;= 1</label>
    </location>
    <location id="id4" x="0" y="260">
      <name x="20" y="247">pc8__iconst_4</name>
      <label kind="invariant" x="-70" y="260">t &lt;= 1</label>
    </location>
    <location id="id5" x="0" y="325">
      <name x="20" y="312">pc9__istore_1</name>
      <label kind="invariant" x="-70" y="325">t &lt;= 1</label>
    </location>
    <location id="id6" x="0" y="390">
      <name x="20" y="377">pc10__sipush_255</name>
      <label kind="invariant" x="-70" y="390">t &lt;= 1</label>
    </location>
    <location id="id7" x="0" y="455">
      <name x="20" y="442">pc13__istore_2</name>
      <label kind="invariant" x="-70" y="455">t &lt;= 1</label>
    </location>
    <location id="id8" x="0" y="520">
      <name x="20" y="507">pc14__aload_0</name>
      <label kind="invariant" x="-70" y="520">t &lt;= 1</label>
    </location>
    <location id="id9" x="0" y="585">
      <name x="20" y="572">pc15__invokespecial_short_ExampleCFI_setIncomingAndReceive_</name>
      <label kind="invariant" x="-70" y="585">t &lt;= 1</label>
    </location>
    <location id="id10" x="0" y="650">
      <name x="20" y="637">pc18__istore_4</name>
      <label kind="invariant" x="-70" y="650">t &lt;= 1</label>
    </location>
    <location id="id11" x="0" y="715">
      <name x="20" y="702">pc20__getstatic_ExampleCFI_flag___int</name>
      <label kind="invariant" x="-70" y="715">t &lt;= 1</label>
    </location>
    <location id="id12" x="0" y="780">
      <name x="20" y="767">pc23__iconst_1</name>
      <label kind="invariant" x="-70" y="780">t &lt;= 1</label>
    </location>
    <location id="id13" x="0" y="845">
      <name x="20" y="832">pc24__iadd</name>
      <label kind="invariant" x="-70" y="845">t &lt;= 1</label>
    </location>
    <location id="id14" x="0" y="910">
      <name x="20" y="897">pc25__putstatic_ExampleCFI_flag___int</name>
      <label kind="invariant" x="-70" y="910">t &lt;= 1</label>
    </location>
    <location id="id15" x="0" y="975">
      <name x="20" y="962">pc28__iload_4</name>
      <label kind="invariant" x="-70" y="975">t &lt;= 1</label>
    </location>
    <location id="id16" x="0" y="1040">
      <name x="20" y="1027">pc30__iload_1</name>
      <label kind="invariant" x="-70" y="1040">t &lt;= 1</label>
    </location>
    <location id="id17" x="0" y="1105">
      <name x="20" y="1092">pc31__ifcmpge_11</name>
      <label kind="invariant" x="-70" y="1105">t &lt;= 1</label>
    </location>
    <location id="id18" x="0" y="1170">
      <name x="20" y="1157">pc34__new_java_lang_Exception</name>
      <label kind="invariant" x="-70" y="1170">t &lt;= 1</label>
    </location>
    <location id="id19" x="0" y="1235">
      <name x="20" y="1222">pc37__dup</name>
      <label kind="invariant" x="-70" y="1235">t &lt;= 1</label>
    </location>
    <location id="id20" x="0" y="1300">
      <name x="20" y="1287">pc38__invokespecial_void_java_lang_Exception_init_</name>
      <label kind="invariant" x="-70" y="1300">t &lt;= 1</label>
    </location>
    <location id="id21" x="0" y="1365">
      <name x="20" y="1352">pc41__athrow</name>
      <label kind="invariant" x="-70" y="1365">t &lt;= 1</label>
    </location>
    <location id="id22" x="0" y="1430">
      <name x="20" y="1417">pc42__aload_0</name>
      <label kind="invariant" x="-70" y="1430">t &lt;= 1</label>
    </location>
    <location id="id23" x="0" y="1495">
      <name x="20" y="1482">pc43__invokespecial_bool_ExampleCFI_isInvalid_</name>
      <label kind="invariant" x="-70" y="1495">t &lt;= 1</label>
    </location>
    <location id="id24" x="0" y="1560">
      <name x="20" y="1547">pc46__ifeq_16</name>
      <label kind="invariant" x="-70" y="1560">t &lt;= 1</label>
    </location>
    <location id="id25" x="0" y="1625">
      <name x="20" y="1612">pc49__aload_0</name>
      <label kind="invariant" x="-70" y="1625">t &lt;= 1</label>
    </location>
    <location id="id26" x="0" y="1690">
      <name x="20" y="1677">pc50__invokespecial_int_ExampleCFI_getTriesRemaining_</name>
      <label kind="invariant" x="-70" y="1690">t &lt;= 1</label>
    </location>
    <location id="id27" x="0" y="1755">
      <name x="20" y="1742">pc53__istore_3</name>
      <label kind="invariant" x="-70" y="1755">t &lt;= 1</label>
    </location>
    <location id="id28" x="0" y="1820">
      <name x="20" y="1807">pc54__new_java_lang_Exception</name>
      <label kind="invariant" x="-70" y="1820">t &lt;= 1</label>
    </location>
    <location id="id29" x="0" y="1885">
      <name x="20" y="1872">pc57__dup</name>
      <label kind="invariant" x="-70" y="1885">t &lt;= 1</label>
    </location>
    <location id="id30" x="0" y="1950">
      <name x="20" y="1937">pc58__invokespecial_void_java_lang_Exception_init_</name>
      <label kind="invariant" x="-70" y="1950">t &lt;= 1</label>
    </location>
    <location id="id31" x="0" y="2015">
      <name x="20" y="2002">pc61__athrow</name>
      <label kind="invariant" x="-70" y="2015">t &lt;= 1</label>
    </location>
    <location id="id32" x="0" y="2080">
      <name x="20" y="2067">pc62__getstatic_ExampleCFI_flag___int</name>
      <label kind="invariant" x="-70" y="2080">t &lt;= 1</label>
    </location>
    <location id="id33" x="0" y="2145">
      <name x="20" y="2132">pc65__iconst_1</name>
      <label kind="invariant" x="-70" y="2145">t &lt;= 1</label>
    </location>
    <location id="id34" x="0" y="2210">
      <name x="20" y="2197">pc66__iadd</name>
      <label kind="invariant" x="-70" y="2210">t &lt;= 1</label>
    </location>
    <location id="id35" x="0" y="2275">
      <name x="20" y="2262">pc67__putstatic_ExampleCFI_flag___int</name>
      <label kind="invariant" x="-70" y="2275">t &lt;= 1</label>
    </location>
    <location id="id36" x="0" y="2340">
      <name x="20" y="2327">pc70__return</name>
      <label kind="invariant" x="-70" y="2340">t &lt;= 1</label>
    </location>
    <location id="id9a" x="200" y="611">
      <name x="220" y="598" />
      <label kind="exponentialrate" x="130" y="611">1</label>
    </location>
    <location id="id9aa" x="200" y="637">
      <name x="220" y="624" />
      <label kind="exponentialrate" x="130" y="637">1</label>
      <urgent />
    </location>
    <location id="id20a" x="200" y="1326">
      <name x="220" y="1313" />
      <label kind="invariant" x="0" y="0">t &lt;= 5</label>
    </location>
    <location id="id21a" x="200" y="1391">
      <name x="220" y="1378" />
      <label kind="exponentialrate" x="130" y="1391">1</label>
      <urgent />
    </location>
    <location id="id23a" x="200" y="1521">
      <name x="220" y="1508" />
      <label kind="exponentialrate" x="130" y="1521">1</label>
    </location>
    <location id="id23aa" x="200" y="1547">
      <name x="220" y="1534" />
      <label kind="exponentialrate" x="130" y="1547">1</label>
      <urgent />
    </location>
    <location id="id26a" x="200" y="1716">
      <name x="220" y="1703" />
      <label kind="exponentialrate" x="130" y="1716">1</label>
    </location>
    <location id="id26aa" x="200" y="1742">
      <name x="220" y="1729" />
      <label kind="exponentialrate" x="130" y="1742">1</label>
      <urgent />
    </location>
    <location id="id30a" x="200" y="1976">
      <name x="220" y="1963" />
      <label kind="invariant" x="0" y="0">t &lt;= 5</label>
    </location>
    <location id="id31a" x="200" y="2041">
      <name x="220" y="2028" />
      <label kind="exponentialrate" x="130" y="2041">1</label>
      <urgent />
    </location>
    <init ref="id-1" />
    <transition>
      <source ref="id-1" />
      <target ref="id0" />
      <label kind="guard" x="20" y="-65">t == 1</label>
      <label kind="synchronisation" x="20" y="-52">cExampleCFI_processVerifyPIN?</label>
      <label kind="assignment" x="20" y="-39">locs[0] = par0, t = 0</label>
    </transition>
    <transition>
      <source ref="id0" />
      <target ref="id1" />
      <label kind="guard" x="20" y="0">t == 1</label>
      <label kind="assignment" x="20" y="13">osp_inc(), os[osp-1] = H[cp0], t = 0</label>
    </transition>
    <transition>
      <source ref="id1" />
      <target ref="id2" />
      <label kind="guard" x="20" y="65">t == 1</label>
      <label kind="assignment" x="20" y="78">osp_inc(), os[osp - 1] = 1, t = 0</label>
    </transition>
    <transition>
      <source ref="id2" />
      <target ref="id3" />
      <label kind="guard" x="20" y="130">t == 1</label>
      <label kind="assignment" x="20" y="143">osp_dec(2), osp_inc(), os[osp - 1] = os[osp - 1] + os[osp], t = 0</label>
    </transition>
    <transition>
      <source ref="id3" />
      <target ref="id4" />
      <label kind="guard" x="20" y="195">t == 1</label>
      <label kind="assignment" x="20" y="208">osp_dec(1), H[cp0] = os[osp], t = 0</label>
    </transition>
    <transition>
      <source ref="id4" />
      <target ref="id5" />
      <label kind="guard" x="20" y="260">t == 1</label>
      <label kind="assignment" x="20" y="273">osp_inc(), os[osp - 1] = 4, t = 0</label>
    </transition>
    <transition>
      <source ref="id5" />
      <target ref="id6" />
      <label kind="assignment" x="20" y="325">osp_dec(1), locs[1] = os[osp]</label>
      <label kind="guard" x="20" y="338">t == 1</label>
    </transition>
    <transition>
      <source ref="id6" />
      <target ref="id7" />
      <label kind="assignment" x="20" y="390">osp_inc(), os[osp] = 255</label>
      <label kind="guard" x="20" y="403">t == 1</label>
    </transition>
    <transition>
      <source ref="id7" />
      <target ref="id8" />
      <label kind="assignment" x="20" y="455">osp_dec(1), locs[2] = os[osp]</label>
      <label kind="guard" x="20" y="468">t == 1</label>
    </transition>
    <transition>
      <source ref="id8" />
      <target ref="id9" />
      <label kind="guard" x="20" y="520">t == 1</label>
      <label kind="assignment" x="20" y="533"> osp_inc(), os[osp - 1] = locs[0], t = 0</label>
    </transition>
    <transition>
      <source ref="id9" />
      <target ref="id9a" />
      <label kind="guard" x="20" y="585">t == 1</label>
      <label kind="assignment" x="20" y="598">osp_dec(1), t = 0, par0 = os[osp]</label>
      <label kind="synchronisation" x="20" y="611">cExampleCFI_setIncomingAndReceive!</label>
    </transition>
    <transition>
      <source ref="id9a" />
      <target ref="id10" />
      <label kind="synchronisation" x="20" y="611">cExampleCFI_setIncomingAndReceive?</label>
      <label kind="guard" x="20" y="624">!exceptionOccurred</label>
      <label kind="assignment" x="20" y="637">t = 0, os[osp] = par0, osp_inc()</label>
    </transition>
    <transition>
      <source ref="id9a" />
      <target ref="id9aa" />
      <label kind="guard" x="20" y="611">exceptionOccurred == true</label>
      <label kind="assignment" x="20" y="624">osp = 0</label>
      <label kind="synchronisation" x="20" y="637">cExampleCFI_setIncomingAndReceive?</label>
    </transition>
    <transition>
      <source ref="id9aa" />
      <target ref="id-1" />
      <label kind="synchronisation" x="20" y="637">cExampleCFI_processVerifyPIN!</label>
    </transition>
    <transition>
      <source ref="id10" />
      <target ref="id11" />
      <label kind="assignment" x="20" y="650">osp_dec(1), locs[4] = os[osp]</label>
      <label kind="guard" x="20" y="663">t == 1</label>
    </transition>
    <transition>
      <source ref="id11" />
      <target ref="id12" />
      <label kind="guard" x="20" y="715">t == 1</label>
      <label kind="assignment" x="20" y="728">osp_inc(), os[osp-1] = H[cp0], t = 0</label>
    </transition>
    <transition>
      <source ref="id12" />
      <target ref="id13" />
      <label kind="guard" x="20" y="780">t == 1</label>
      <label kind="assignment" x="20" y="793">osp_inc(), os[osp - 1] = 1, t = 0</label>
    </transition>
    <transition>
      <source ref="id13" />
      <target ref="id14" />
      <label kind="guard" x="20" y="845">t == 1</label>
      <label kind="assignment" x="20" y="858">osp_dec(2), osp_inc(), os[osp - 1] = os[osp - 1] + os[osp], t = 0</label>
    </transition>
    <transition>
      <source ref="id14" />
      <target ref="id15" />
      <label kind="guard" x="20" y="910">t == 1</label>
      <label kind="assignment" x="20" y="923">osp_dec(1), H[cp0] = os[osp], t = 0</label>
    </transition>
    <transition>
      <source ref="id15" />
      <target ref="id16" />
      <label kind="assignment" x="20" y="975">osp_inc(), os[osp - 1] = locs[4]</label>
      <label kind="guard" x="20" y="988">t == 1</label>
    </transition>
    <transition>
      <source ref="id16" />
      <target ref="id17" />
      <label kind="assignment" x="20" y="1040">osp_inc(), os[osp - 1] = locs[1]</label>
      <label kind="guard" x="20" y="1053">t == 1</label>
    </transition>
    <transition>
      <source ref="id17" />
      <target ref="id18" />
      <label kind="guard" x="20" y="1105">t == 1 &amp;&amp; !ifcmpge()</label>
      <label kind="assignment" x="20" y="1118">osp_dec(2)</label>
    </transition>
    <transition>
      <source ref="id17" />
      <target ref="id22" />
      <label kind="guard" x="20" y="1105">t == 1 &amp;&amp; ifcmpge()</label>
      <label kind="assignment" x="20" y="1118">osp_dec(2)</label>
      <nail x="-50" y="1267" />
    </transition>
    <transition>
      <source ref="id18" />
      <target ref="id19" />
      <label kind="guard" x="20" y="1170">t == 1</label>
      <label kind="assignment" x="20" y="1183">osp_inc(), os[osp-1] = alocNew(-1), t = 0</label>
    </transition>
    <transition>
      <source ref="id19" />
      <target ref="id20" />
      <label kind="assignment" x="20" y="1235">osp_dec(1), osp_inc(), osp_inc(), os[osp - 1] = os[osp - 2]</label>
      <label kind="guard" x="20" y="1248">t == 1</label>
    </transition>
    <transition>
      <source ref="id20" />
      <target ref="id20a" />
      <label kind="guard" x="20" y="1300">t == 1</label>
      <label kind="assignment" x="20" y="1313">osp_dec(1), t = 0</label>
    </transition>
    <transition>
      <source ref="id20a" />
      <target ref="id21" />
      <label kind="guard" x="20" y="1326">t == 5</label>
      <label kind="assignment" x="20" y="1339">t = 0</label>
    </transition>
    <transition>
      <source ref="id21" />
      <target ref="id21a" />
      <label kind="guard" x="20" y="1365">t == 1</label>
      <label kind="assignment" x="20" y="1378">exceptionOccurred = true</label>
    </transition>
    <transition>
      <source ref="id21a" />
      <target ref="id-1" />
      <label kind="synchronisation" x="20" y="1391">cExampleCFI_processVerifyPIN!</label>
    </transition>
    <transition>
      <source ref="id22" />
      <target ref="id23" />
      <label kind="guard" x="20" y="1430">t == 1</label>
      <label kind="assignment" x="20" y="1443"> osp_inc(), os[osp - 1] = locs[0], t = 0</label>
    </transition>
    <transition>
      <source ref="id23" />
      <target ref="id23a" />
      <label kind="guard" x="20" y="1495">t == 1</label>
      <label kind="assignment" x="20" y="1508">osp_dec(1), t = 0, par0 = os[osp]</label>
      <label kind="synchronisation" x="20" y="1521">cExampleCFI_isInvalid!</label>
    </transition>
    <transition>
      <source ref="id23a" />
      <target ref="id24" />
      <label kind="synchronisation" x="20" y="1521">cExampleCFI_isInvalid?</label>
      <label kind="guard" x="20" y="1534">!exceptionOccurred</label>
      <label kind="assignment" x="20" y="1547">t = 0, os[osp] = par0, osp_inc()</label>
    </transition>
    <transition>
      <source ref="id23a" />
      <target ref="id23aa" />
      <label kind="guard" x="20" y="1521">exceptionOccurred == true</label>
      <label kind="assignment" x="20" y="1534">osp = 0</label>
      <label kind="synchronisation" x="20" y="1547">cExampleCFI_isInvalid?</label>
    </transition>
    <transition>
      <source ref="id23aa" />
      <target ref="id-1" />
      <label kind="synchronisation" x="20" y="1547">cExampleCFI_processVerifyPIN!</label>
    </transition>
    <transition>
      <source ref="id24" />
      <target ref="id32" />
      <label kind="guard" x="20" y="1560">t == 1 &amp;&amp; ifeq()</label>
      <label kind="assignment" x="20" y="1573">osp_dec(1), t = 0</label>
      <nail x="-50" y="1820" />
    </transition>
    <transition>
      <source ref="id24" />
      <target ref="id25" />
      <label kind="guard" x="20" y="1560">t == 1 &amp;&amp; !ifeq()</label>
      <label kind="assignment" x="20" y="1573">opstack_fault = osp &lt; 1 ? true : opstack_fault, osp_dec(1), t = 0</label>
    </transition>
    <transition>
      <source ref="id25" />
      <target ref="id26" />
      <label kind="guard" x="20" y="1625">t == 1</label>
      <label kind="assignment" x="20" y="1638"> osp_inc(), os[osp - 1] = locs[0], t = 0</label>
    </transition>
    <transition>
      <source ref="id26" />
      <target ref="id26a" />
      <label kind="guard" x="20" y="1690">t == 1</label>
      <label kind="assignment" x="20" y="1703">osp_dec(1), t = 0, par0 = os[osp]</label>
      <label kind="synchronisation" x="20" y="1716">cExampleCFI_getTriesRemaining!</label>
    </transition>
    <transition>
      <source ref="id26a" />
      <target ref="id27" />
      <label kind="synchronisation" x="20" y="1716">cExampleCFI_getTriesRemaining?</label>
      <label kind="guard" x="20" y="1729">!exceptionOccurred</label>
      <label kind="assignment" x="20" y="1742">t = 0, os[osp] = par0, osp_inc()</label>
    </transition>
    <transition>
      <source ref="id26a" />
      <target ref="id26aa" />
      <label kind="guard" x="20" y="1716">exceptionOccurred == true</label>
      <label kind="assignment" x="20" y="1729">osp = 0</label>
      <label kind="synchronisation" x="20" y="1742">cExampleCFI_getTriesRemaining?</label>
    </transition>
    <transition>
      <source ref="id26aa" />
      <target ref="id-1" />
      <label kind="synchronisation" x="20" y="1742">cExampleCFI_processVerifyPIN!</label>
    </transition>
    <transition>
      <source ref="id27" />
      <target ref="id28" />
      <label kind="assignment" x="20" y="1755">osp_dec(1), locs[3] = os[osp]</label>
      <label kind="guard" x="20" y="1768">t == 1</label>
    </transition>
    <transition>
      <source ref="id28" />
      <target ref="id29" />
      <label kind="guard" x="20" y="1820">t == 1</label>
      <label kind="assignment" x="20" y="1833">osp_inc(), os[osp-1] = alocNew(-1), t = 0</label>
    </transition>
    <transition>
      <source ref="id29" />
      <target ref="id30" />
      <label kind="assignment" x="20" y="1885">osp_dec(1), osp_inc(), osp_inc(), os[osp - 1] = os[osp - 2]</label>
      <label kind="guard" x="20" y="1898">t == 1</label>
    </transition>
    <transition>
      <source ref="id30" />
      <target ref="id30a" />
      <label kind="guard" x="20" y="1950">t == 1</label>
      <label kind="assignment" x="20" y="1963">osp_dec(1), t = 0</label>
    </transition>
    <transition>
      <source ref="id30a" />
      <target ref="id31" />
      <label kind="guard" x="20" y="1976">t == 5</label>
      <label kind="assignment" x="20" y="1989">t = 0</label>
    </transition>
    <transition>
      <source ref="id31" />
      <target ref="id31a" />
      <label kind="guard" x="20" y="2015">t == 1</label>
      <label kind="assignment" x="20" y="2028">exceptionOccurred = true</label>
    </transition>
    <transition>
      <source ref="id31a" />
      <target ref="id-1" />
      <label kind="synchronisation" x="20" y="2041">cExampleCFI_processVerifyPIN!</label>
    </transition>
    <transition>
      <source ref="id32" />
      <target ref="id33" />
      <label kind="guard" x="20" y="2080">t == 1</label>
      <label kind="assignment" x="20" y="2093">osp_inc(), os[osp-1] = H[cp0], t = 0</label>
    </transition>
    <transition>
      <source ref="id33" />
      <target ref="id34" />
      <label kind="guard" x="20" y="2145">t == 1</label>
      <label kind="assignment" x="20" y="2158">osp_inc(), os[osp - 1] = 1, t = 0</label>
    </transition>
    <transition>
      <source ref="id34" />
      <target ref="id35" />
      <label kind="guard" x="20" y="2210">t == 1</label>
      <label kind="assignment" x="20" y="2223">osp_dec(2), osp_inc(), os[osp - 1] = os[osp - 1] + os[osp], t = 0</label>
    </transition>
    <transition>
      <source ref="id35" />
      <target ref="id36" />
      <label kind="guard" x="20" y="2275">t == 1</label>
      <label kind="assignment" x="20" y="2288">osp_dec(1), H[cp0] = os[osp], t = 0</label>
    </transition>
    <transition>
      <source ref="id36" />
      <target ref="id-1" />
      <label kind="guard" x="20" y="2340">t == 1</label>
      <label kind="synchronisation" x="20" y="2353">cExampleCFI_processVerifyPIN!</label>
      <label kind="guard" x="20" y="2366">t == 1</label>
      <label kind="assignment" x="20" y="2379">osp = 0, t = 0</label>
      <nail x="-100" y="1137" />
    </transition>
  </template>
  <template>
    <name>ExampleCFI_main</name>
    <declaration>const int os_size = 10;
const int locs_size = 10;
int os[os_size]; 
int osp = 0;
int locs[locs_size];

void osp_inc(){
    if (osp &gt;= os_size - 1){
        opstack_fault = true;
        return;
    }
    osp++;
    return;
}

void osp_dec(int i){
    if (osp &lt; i){
        opstack_fault = true;
        return;
    }
    osp -= i;
    return;
}

bool ifcmpme(){
    if (osp &gt; 1){
        return os[osp-2] &gt;= os[osp - 1];
    }
    return false;
}

bool ifcmpeq(){
    if (osp &gt; 1){
        return os[osp-2] == os[osp - 1];
    }
    return false;
}

bool ifcmpge(){
    if (osp &gt; 1){
        return os[osp - 2] &gt;= os[osp - 1] ;
    }
    return false;
}

bool ifcmpne(){
    if (osp &gt; 1){
        return os[osp - 2] != os[osp - 1] ;
    }
    return false;
}


bool ifeq(){
    if (osp &gt; 0){
        return os[osp - 1] == 0;
    }
    return false;
}</declaration>
    <location id="id-1" x="0" y="-65">
      <name x="20" y="-78">main</name>
      <label kind="exponentialrate" x="-70" y="-65">1</label>
      <urgent />
    </location>
    <location id="id0" x="0" y="0">
      <name x="20" y="-13">pc0__new_ExampleCFI</name>
      <label kind="invariant" x="-70" y="0">t &lt;= 1</label>
    </location>
    <location id="id1" x="0" y="65">
      <name x="20" y="52">pc3__dup</name>
      <label kind="invariant" x="-70" y="65">t &lt;= 1</label>
    </location>
    <location id="id2" x="0" y="130">
      <name x="20" y="117">pc4__invokespecial_void_ExampleCFI_init_</name>
      <label kind="invariant" x="-70" y="130">t &lt;= 1</label>
    </location>
    <location id="id3" x="0" y="195">
      <name x="20" y="182">pc7__astore_1</name>
      <label kind="invariant" x="-70" y="195">t &lt;= 1</label>
    </location>
    <location id="id4" x="0" y="260">
      <name x="20" y="247">pc8__goto_4</name>
      <label kind="invariant" x="-70" y="260">t &lt;= 1</label>
    </location>
    <location id="id5" x="0" y="325">
      <name x="20" y="312">pc11__astore_1</name>
      <label kind="invariant" x="-70" y="325">t &lt;= 1</label>
    </location>
    <location id="id6" x="0" y="390">
      <name x="20" y="377">pc12__return</name>
      <label kind="invariant" x="-70" y="390">t &lt;= 1</label>
    </location>
    <location id="id2a" x="200" y="156">
      <name x="220" y="143" />
      <label kind="exponentialrate" x="130" y="156">1</label>
    </location>
    <location id="id2aa" x="200" y="182">
      <name x="220" y="169" />
      <label kind="exponentialrate" x="130" y="182">1</label>
      <urgent />
    </location>
    <location id="id6a" x="200" y="416">
      <name x="220" y="403">Done</name>
      <label kind="exponentialrate" x="0" y="0">1</label>
    </location>
    <init ref="id-1" />
    <transition>
      <source ref="id-1" />
      <target ref="id0" />
      <label kind="assignment" x="20" y="-65">t = 0</label>
    </transition>
    <transition>
      <source ref="id0" />
      <target ref="id1" />
      <label kind="guard" x="20" y="0">t == 1</label>
      <label kind="assignment" x="20" y="13">osp_inc(), os[osp-1] = alocNew(1), t = 0</label>
    </transition>
    <transition>
      <source ref="id1" />
      <target ref="id2" />
      <label kind="assignment" x="20" y="65">osp_dec(1), osp_inc(), osp_inc(), os[osp - 1] = os[osp - 2]</label>
      <label kind="guard" x="20" y="78">t == 1</label>
    </transition>
    <transition>
      <source ref="id2" />
      <target ref="id2a" />
      <label kind="guard" x="20" y="130">t == 1</label>
      <label kind="assignment" x="20" y="143">osp_dec(1), t = 0, par0 = os[osp]</label>
      <label kind="synchronisation" x="20" y="156">cExampleCFI_ExampleCFI!</label>
    </transition>
    <transition>
      <source ref="id2a" />
      <target ref="id3" />
      <label kind="synchronisation" x="20" y="156">cExampleCFI_ExampleCFI?</label>
      <label kind="guard" x="20" y="169">!exceptionOccurred</label>
      <label kind="assignment" x="20" y="182">t = 0</label>
    </transition>
    <transition>
      <source ref="id2a" />
      <target ref="id2aa" />
      <label kind="guard" x="20" y="156">exceptionOccurred == true</label>
      <label kind="assignment" x="20" y="169">osp_inc()</label>
      <label kind="synchronisation" x="20" y="182">cExampleCFI_ExampleCFI?</label>
    </transition>
    <transition>
      <source ref="id2aa" />
      <target ref="id5" />
      <label kind="synchronisation" x="20" y="182">cExampleCFI_main!</label>
    </transition>
    <transition>
      <source ref="id3" />
      <target ref="id4" />
      <label kind="assignment" x="20" y="195">osp_dec(1), locs[1] = os[osp]</label>
      <label kind="guard" x="20" y="208">t == 1</label>
    </transition>
    <transition>
      <source ref="id4" />
      <target ref="id6" />
      <label kind="guard" x="20" y="260">t == 1</label>
      <nail x="-50" y="325" />
    </transition>
    <transition>
      <source ref="id5" />
      <target ref="id6" />
      <label kind="assignment" x="20" y="325">osp_dec(1), locs[1] = os[osp]</label>
      <label kind="guard" x="20" y="338">t == 1</label>
    </transition>
    <transition>
      <source ref="id6" />
      <target ref="id6a" />
      <label kind="guard" x="20" y="390">t == 1</label>
      <label kind="synchronisation" x="20" y="403">cExampleCFI_main!</label>
      <label kind="guard" x="20" y="416">t == 1</label>
    </transition>
  </template>
  <template>
    <name>ExampleCFI_getTriesRemaining</name>
    <declaration>const int os_size = 10;
const int locs_size = 10;
int os[os_size]; 
int osp = 0;
int locs[locs_size];

void osp_inc(){
    if (osp &gt;= os_size - 1){
        opstack_fault = true;
        return;
    }
    osp++;
    return;
}

void osp_dec(int i){
    if (osp &lt; i){
        opstack_fault = true;
        return;
    }
    osp -= i;
    return;
}

bool ifcmpme(){
    if (osp &gt; 1){
        return os[osp-2] &gt;= os[osp - 1];
    }
    return false;
}

bool ifcmpeq(){
    if (osp &gt; 1){
        return os[osp-2] == os[osp - 1];
    }
    return false;
}

bool ifcmpge(){
    if (osp &gt; 1){
        return os[osp - 2] &gt;= os[osp - 1] ;
    }
    return false;
}

bool ifcmpne(){
    if (osp &gt; 1){
        return os[osp - 2] != os[osp - 1] ;
    }
    return false;
}


bool ifeq(){
    if (osp &gt; 0){
        return os[osp - 1] == 0;
    }
    return false;
}</declaration>
    <location id="id-1" x="0" y="-65">
      <name x="20" y="-78">getTriesRemaining</name>
      <label kind="exponentialrate" x="-70" y="-65">1</label>
    </location>
    <location id="id0" x="0" y="0">
      <name x="20" y="-13">pc0__iconst_2</name>
      <label kind="invariant" x="-70" y="0">t &lt;= 1</label>
    </location>
    <location id="id1" x="0" y="65">
      <name x="20" y="52">pc1__ireturn</name>
      <label kind="invariant" x="-70" y="65">t &lt;= 1</label>
    </location>
    <init ref="id-1" />
    <transition>
      <source ref="id-1" />
      <target ref="id0" />
      <label kind="guard" x="20" y="-65">t == 1</label>
      <label kind="synchronisation" x="20" y="-52">cExampleCFI_getTriesRemaining?</label>
      <label kind="assignment" x="20" y="-39">locs[0] = par0, t = 0</label>
    </transition>
    <transition>
      <source ref="id0" />
      <target ref="id1" />
      <label kind="guard" x="20" y="0">t == 1</label>
      <label kind="assignment" x="20" y="13">osp_inc(), os[osp - 1] = 2, t = 0</label>
    </transition>
    <transition>
      <source ref="id1" />
      <target ref="id-1" />
      <label kind="guard" x="20" y="65">t == 1</label>
      <label kind="synchronisation" x="20" y="78">cExampleCFI_getTriesRemaining!</label>
      <label kind="guard" x="20" y="91">t == 1</label>
      <label kind="assignment" x="20" y="104">osp_dec(1), par0 = os[osp], osp = 0, t = 0</label>
      <nail x="-100" y="0" />
    </transition>
  </template>
  <template>
    <name>ExampleCFI_setIncomingAndReceive</name>
    <declaration>const int os_size = 10;
const int locs_size = 10;
int os[os_size]; 
int osp = 0;
int locs[locs_size];

void osp_inc(){
    if (osp &gt;= os_size - 1){
        opstack_fault = true;
        return;
    }
    osp++;
    return;
}

void osp_dec(int i){
    if (osp &lt; i){
        opstack_fault = true;
        return;
    }
    osp -= i;
    return;
}

bool ifcmpme(){
    if (osp &gt; 1){
        return os[osp-2] &gt;= os[osp - 1];
    }
    return false;
}

bool ifcmpeq(){
    if (osp &gt; 1){
        return os[osp-2] == os[osp - 1];
    }
    return false;
}

bool ifcmpge(){
    if (osp &gt; 1){
        return os[osp - 2] &gt;= os[osp - 1] ;
    }
    return false;
}

bool ifcmpne(){
    if (osp &gt; 1){
        return os[osp - 2] != os[osp - 1] ;
    }
    return false;
}


bool ifeq(){
    if (osp &gt; 0){
        return os[osp - 1] == 0;
    }
    return false;
}</declaration>
    <location id="id-1" x="0" y="-65">
      <name x="20" y="-78">setIncomingAndReceive</name>
      <label kind="exponentialrate" x="-70" y="-65">1</label>
    </location>
    <location id="id0" x="0" y="0">
      <name x="20" y="-13">pc0__getstatic_ExampleCFI_flag___int</name>
      <label kind="invariant" x="-70" y="0">t &lt;= 1</label>
    </location>
    <location id="id1" x="0" y="65">
      <name x="20" y="52">pc3__iconst_1</name>
      <label kind="invariant" x="-70" y="65">t &lt;= 1</label>
    </location>
    <location id="id2" x="0" y="130">
      <name x="20" y="117">pc4__iadd</name>
      <label kind="invariant" x="-70" y="130">t &lt;= 1</label>
    </location>
    <location id="id3" x="0" y="195">
      <name x="20" y="182">pc5__putstatic_ExampleCFI_flag___int</name>
      <label kind="invariant" x="-70" y="195">t &lt;= 1</label>
    </location>
    <location id="id4" x="0" y="260">
      <name x="20" y="247">pc8__iconst_5</name>
      <label kind="invariant" x="-70" y="260">t &lt;= 1</label>
    </location>
    <location id="id5" x="0" y="325">
      <name x="20" y="312">pc9__ireturn</name>
      <label kind="invariant" x="-70" y="325">t &lt;= 1</label>
    </location>
    <init ref="id-1" />
    <transition>
      <source ref="id-1" />
      <target ref="id0" />
      <label kind="guard" x="20" y="-65">t == 1</label>
      <label kind="synchronisation" x="20" y="-52">cExampleCFI_setIncomingAndReceive?</label>
      <label kind="assignment" x="20" y="-39">locs[0] = par0, t = 0</label>
    </transition>
    <transition>
      <source ref="id0" />
      <target ref="id1" />
      <label kind="guard" x="20" y="0">t == 1</label>
      <label kind="assignment" x="20" y="13">osp_inc(), os[osp-1] = H[cp0], t = 0</label>
    </transition>
    <transition>
      <source ref="id1" />
      <target ref="id2" />
      <label kind="guard" x="20" y="65">t == 1</label>
      <label kind="assignment" x="20" y="78">osp_inc(), os[osp - 1] = 1, t = 0</label>
    </transition>
    <transition>
      <source ref="id2" />
      <target ref="id3" />
      <label kind="guard" x="20" y="130">t == 1</label>
      <label kind="assignment" x="20" y="143">osp_dec(2), osp_inc(), os[osp - 1] = os[osp - 1] + os[osp], t = 0</label>
    </transition>
    <transition>
      <source ref="id3" />
      <target ref="id4" />
      <label kind="guard" x="20" y="195">t == 1</label>
      <label kind="assignment" x="20" y="208">osp_dec(1), H[cp0] = os[osp], t = 0</label>
    </transition>
    <transition>
      <source ref="id4" />
      <target ref="id5" />
      <label kind="guard" x="20" y="260">t == 1</label>
      <label kind="assignment" x="20" y="273">osp_inc(), os[osp - 1] = 5, t = 0</label>
    </transition>
    <transition>
      <source ref="id5" />
      <target ref="id-1" />
      <label kind="guard" x="20" y="325">t == 1</label>
      <label kind="synchronisation" x="20" y="338">cExampleCFI_setIncomingAndReceive!</label>
      <label kind="guard" x="20" y="351">t == 1</label>
      <label kind="assignment" x="20" y="364">osp_dec(1), par0 = os[osp], osp = 0, t = 0</label>
      <nail x="-100" y="130" />
    </transition>
  </template>
  <system>iExampleCFI_isInvalid = ExampleCFI_isInvalid();
iExampleCFI_ExampleCFI = ExampleCFI_ExampleCFI();
iExampleCFI_processVerifyPIN = ExampleCFI_processVerifyPIN();
iExampleCFI_main = ExampleCFI_main();
iExampleCFI_getTriesRemaining = ExampleCFI_getTriesRemaining();
iExampleCFI_setIncomingAndReceive = ExampleCFI_setIncomingAndReceive();
system iExampleCFI_isInvalid,iExampleCFI_ExampleCFI,iExampleCFI_processVerifyPIN,iExampleCFI_main,iExampleCFI_getTriesRemaining,iExampleCFI_setIncomingAndReceive;
</system>
  <queries>queries<query>query<formula>A&lt;&gt; iExampleCFI_main.Done &amp;&amp; !opstack_fault &amp;&amp; exceptionOccurred</formula></query><query>query<formula>Pr[&lt;= 100] (&lt;&gt; iExampleCFI_main.Done &amp;&amp; !opstack_fault &amp;&amp; exceptionOccurred)</formula></query><query>query<formula>E&lt;&gt; opstack_fault</formula></query><query>query<formula>Pr[&lt;= 100] (&lt;&gt; opstack_fault)</formula></query><query>query<formula>E&lt;&gt; iExampleCFI_main.Done &amp;&amp; !opstack_fault &amp;&amp; !exceptionOccurred</formula></query><query>query<formula>Pr[&lt;= 100] (&lt;&gt; iExampleCFI_main.Done &amp;&amp; !opstack_fault &amp;&amp; !exceptionOccurred)</formula></query></queries>
</nta>