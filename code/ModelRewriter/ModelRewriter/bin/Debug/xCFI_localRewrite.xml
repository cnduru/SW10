<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC "-//Uppaal Team//DTD Flat System 1.1//EN" "http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd"[]>
<nta>
  <declaration>clock t;
bool exceptionOccurred;
const int heap_size = 13;
int _H[heap_size];
int H(int i)
{
    if (i &lt; heap_size) return _H[i];
    exceptionOccurred = true;
    return 0;
}
void setH(int i, int v)
{
    if (i &lt; heap_size) _H[i] = v;
    else exceptionOccurred = true;
}
int cp0= 1;
int cp1= 2;
int cp2= 3;
int par0;
int par1;
int par2;
broadcast chan cExampleCFI_isInvalid;
broadcast chan cExampleCFI_ExampleCFI;
broadcast chan cExampleCFI_processVerifyPIN;
broadcast chan cExampleCFI_main;
broadcast chan cExampleCFI_getTriesRemaining;
broadcast chan cExampleCFI_setIncomingAndReceive;
bool opstack_fault = false;
const int classCount = 4;
const int _classFields[classCount] = {0, 3, 1, 1};
int classFields(int i)
{
    if (i &lt; classCount) return _classFields[i];
    exceptionOccurred = true;    return 0;}

int heapPointer = 4;
int alocNew(int classID){
    int ref = heapPointer;
    if(classID &lt; 0) return -1;
    setH(ref, classID);
    heapPointer += classFields(classID);
    return ref;
}


int faultAt = 0;
clock globalClock;
int faultTime;</declaration>
  <template>
    <name>ExampleCFI_isInvalid</name>
    <declaration>const int os_size = 10;
const int locs_size = 10;
int os[os_size]; 
int osp = 0;
int locs[locs_size];

void osp_inc(){
    if (osp &gt;= os_size - 1){
        opstack_fault = true;
        return;
    }
    osp++;
    return;
}

void osp_dec(int i){
    if (osp &lt; i){
        opstack_fault = true;
        return;
    }
    osp -= i;
    return;
}

bool ifcmpme(){
    if (osp &gt; 1){
        return os[osp-2] &gt;= os[osp - 1];
    }
    return false;
}

bool ifcmpeq(){
    if (osp &gt; 1){
        return os[osp-2] == os[osp - 1];
    }
    return false;
}

bool ifcmpge(){
    if (osp &gt; 1){
        return os[osp - 2] &gt;= os[osp - 1] ;
    }
    return false;
}

bool ifcmpne(){
    if (osp &gt; 1){
        return os[osp - 2] != os[osp - 1] ;
    }
    return false;
}


bool ifeq(){
    if (osp &gt; 0){
        return os[osp - 1] == 0;
    }
    return false;
}</declaration>
    <location id="id-1" x="0" y="-65">
      <name x="20" y="-78">isInvalid</name>
      <label kind="exponentialrate" x="-70" y="-65">1</label>
    </location>
    <location id="id0" x="0" y="0">
      <name x="20" y="-13">pc0__getstatic_ExampleCFI_flag___int</name>
      <label kind="invariant" x="-70" y="0">t &lt;= 1</label>
    </location>
    <location id="id1" x="0" y="65">
      <name x="20" y="52">pc3__iconst_1</name>
      <label kind="invariant" x="-70" y="65">t &lt;= 1</label>
    </location>
    <location id="id2" x="0" y="130">
      <name x="20" y="117">pc4__iadd</name>
      <label kind="invariant" x="-70" y="130">t &lt;= 1</label>
    </location>
    <location id="id3" x="0" y="195">
      <name x="20" y="182">pc5__putstatic_ExampleCFI_flag___int</name>
      <label kind="invariant" x="-70" y="195">t &lt;= 1</label>
    </location>
    <location id="id4" x="0" y="260">
      <name x="20" y="247">pc8__iconst_1</name>
      <label kind="invariant" x="-70" y="260">t &lt;= 1</label>
    </location>
    <location id="id5" x="0" y="325">
      <name x="20" y="312">pc9__ireturn</name>
      <label kind="invariant" x="-70" y="325">t &lt;= 1</label>
    </location>
    <init ref="id-1" />
    <transition>
      <source ref="id-1" />
      <target ref="id0" />
      <label kind="guard" x="20" y="-65">t == 1</label>
      <label kind="assignment" x="20" y="-39">locs[0] = par0, t = 0</label>
      <label kind="synchronisation" x="20" y="-52">cExampleCFI_isInvalid?</label>
    </transition>
    <transition>
      <source ref="id0" />
      <target ref="id1" />
      <label kind="guard" x="20" y="0">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="13">osp_inc(), os[osp-1] = H(cp0), t = 0</label>
    </transition>
    <transition>
      <source ref="id1" />
      <target ref="id2" />
      <label kind="guard" x="20" y="65">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="78">osp_inc(), os[osp - 1] = 1, t = 0</label>
    </transition>
    <transition>
      <source ref="id2" />
      <target ref="id3" />
      <label kind="guard" x="20" y="130">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="143">osp_dec(2), osp_inc(), os[osp - 1] = os[osp - 1] + os[osp], t = 0</label>
    </transition>
    <transition>
      <source ref="id3" />
      <target ref="id4" />
      <label kind="guard" x="20" y="195">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="208">osp_dec(1), setH(cp0, os[osp]), t = 0</label>
    </transition>
    <transition>
      <source ref="id4" />
      <target ref="id5" />
      <label kind="guard" x="20" y="260">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="273">osp_inc(), os[osp - 1] = 1, t = 0</label>
    </transition>
    <transition>
      <source ref="id5" />
      <target ref="id-1" />
      <label kind="guard" x="20" y="325">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="364">osp_dec(1), par0 = os[osp], osp = 0, t = 0</label>
      <label kind="synchronisation" x="20" y="338">cExampleCFI_isInvalid!</label>
      <nail x="-100" y="130" />
    </transition>
    <transition>
      <source ref="id0" />
      <target ref="id0" />
      <label kind="guard" x="20" y="0">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="13">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="26">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id1" />
      <target ref="id1" />
      <label kind="guard" x="20" y="65">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="78">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="91">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id2" />
      <target ref="id2" />
      <label kind="guard" x="20" y="130">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="143">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="156">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id3" />
      <target ref="id3" />
      <label kind="guard" x="20" y="195">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="208">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="221">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id4" />
      <target ref="id4" />
      <label kind="guard" x="20" y="260">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="273">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="286">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id5" />
      <target ref="id5" />
      <label kind="guard" x="20" y="325">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="338">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="351">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
  </template>
  <template>
    <name>ExampleCFI_ExampleCFI</name>
    <declaration>const int os_size = 10;
const int locs_size = 10;
int os[os_size]; 
int osp = 0;
int locs[locs_size];

void osp_inc(){
    if (osp &gt;= os_size - 1){
        opstack_fault = true;
        return;
    }
    osp++;
    return;
}

void osp_dec(int i){
    if (osp &lt; i){
        opstack_fault = true;
        return;
    }
    osp -= i;
    return;
}

bool ifcmpme(){
    if (osp &gt; 1){
        return os[osp-2] &gt;= os[osp - 1];
    }
    return false;
}

bool ifcmpeq(){
    if (osp &gt; 1){
        return os[osp-2] == os[osp - 1];
    }
    return false;
}

bool ifcmpge(){
    if (osp &gt; 1){
        return os[osp - 2] &gt;= os[osp - 1] ;
    }
    return false;
}

bool ifcmpne(){
    if (osp &gt; 1){
        return os[osp - 2] != os[osp - 1] ;
    }
    return false;
}


bool ifeq(){
    if (osp &gt; 0){
        return os[osp - 1] == 0;
    }
    return false;
}</declaration>
    <location id="id-1" x="0" y="-65">
      <name x="20" y="-78">ExampleCFI</name>
      <label kind="exponentialrate" x="-70" y="-65">1</label>
    </location>
    <location id="id0" x="0" y="0">
      <name x="20" y="-13">pc0__aload_0</name>
      <label kind="invariant" x="-70" y="0">t &lt;= 1</label>
    </location>
    <location id="id1" x="0" y="65">
      <name x="20" y="52">pc1__invokespecial_void_java_lang_Object_init_</name>
      <label kind="invariant" x="-70" y="65">t &lt;= 1</label>
    </location>
    <location id="id2" x="0" y="130">
      <name x="20" y="117">pc4__aload_0</name>
      <label kind="invariant" x="-70" y="130">t &lt;= 1</label>
    </location>
    <location id="id3" x="0" y="195">
      <name x="20" y="182">pc5__invokespecial_void_ExampleCFI_processVerifyPIN_</name>
      <label kind="invariant" x="-70" y="195">t &lt;= 1</label>
    </location>
    <location id="id4" x="0" y="260">
      <name x="20" y="247">pc8__getstatic_ExampleCFI_flag___int</name>
      <label kind="invariant" x="-70" y="260">t &lt;= 1</label>
    </location>
    <location id="id5" x="0" y="325">
      <name x="20" y="312">pc11__iconst_2</name>
      <label kind="invariant" x="-70" y="325">t &lt;= 1</label>
    </location>
    <location id="id6" x="0" y="390">
      <name x="20" y="377">pc12__ifcmpeq_11</name>
      <label kind="invariant" x="-70" y="390">t &lt;= 1</label>
    </location>
    <location id="id7" x="0" y="455">
      <name x="20" y="442">pc15__new_java_lang_Exception</name>
      <label kind="invariant" x="-70" y="455">t &lt;= 1</label>
    </location>
    <location id="id8" x="0" y="520">
      <name x="20" y="507">pc18__dup</name>
      <label kind="invariant" x="-70" y="520">t &lt;= 1</label>
    </location>
    <location id="id9" x="0" y="585">
      <name x="20" y="572">pc19__invokespecial_void_java_lang_Exception_init_</name>
      <label kind="invariant" x="-70" y="585">t &lt;= 1</label>
    </location>
    <location id="id10" x="0" y="650">
      <name x="20" y="637">pc22__athrow</name>
      <label kind="invariant" x="-70" y="650">t &lt;= 1</label>
    </location>
    <location id="id11" x="0" y="715">
      <name x="20" y="702">pc23__return</name>
      <label kind="invariant" x="-70" y="715">t &lt;= 1</label>
    </location>
    <location id="id1a" x="200" y="91">
      <name x="220" y="78"></name>
      <label kind="invariant" x="0" y="0">t &lt;= 5</label>
    </location>
    <location id="id3a" x="200" y="221">
      <name x="220" y="208"></name>
      <label kind="exponentialrate" x="130" y="221">1</label>
    </location>
    <location id="id3aa" x="200" y="247">
      <name x="220" y="234"></name>
      <label kind="exponentialrate" x="330" y="247">1</label>
      <urgent />
    </location>
    <location id="id9a" x="200" y="611">
      <name x="220" y="598"></name>
      <label kind="invariant" x="0" y="0">t &lt;= 5</label>
    </location>
    <location id="id10a" x="200" y="676">
      <name x="220" y="663"></name>
      <label kind="exponentialrate" x="130" y="676">1</label>
      <urgent />
    </location>
    <init ref="id-1" />
    <transition>
      <source ref="id-1" />
      <target ref="id0" />
      <label kind="guard" x="20" y="-65">t == 1</label>
      <label kind="assignment" x="20" y="-39">locs[0] = par0, t = 0</label>
      <label kind="synchronisation" x="20" y="-52">cExampleCFI_ExampleCFI?</label>
    </transition>
    <transition>
      <source ref="id0" />
      <target ref="id1" />
      <label kind="guard" x="20" y="0">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="13"> osp_inc(), os[osp - 1] = locs[0], t = 0</label>
    </transition>
    <transition>
      <source ref="id1" />
      <target ref="id1a" />
      <label kind="guard" x="20" y="65">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="78">osp_dec(1), t = 0</label>
    </transition>
    <transition>
      <source ref="id1a" />
      <target ref="id2" />
      <label kind="guard" x="20" y="91">t == 5</label>
      <label kind="assignment" x="20" y="104">t = 0</label>
    </transition>
    <transition>
      <source ref="id2" />
      <target ref="id3" />
      <label kind="guard" x="20" y="130">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="143"> osp_inc(), os[osp - 1] = locs[0], t = 0</label>
    </transition>
    <transition>
      <source ref="id3" />
      <target ref="id3a" />
      <label kind="guard" x="20" y="195">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="208">osp_dec(1), t = 0, par0 = os[osp]</label>
      <label kind="synchronisation" x="20" y="221">cExampleCFI_processVerifyPIN!</label>
    </transition>
    <transition>
      <source ref="id3a" />
      <target ref="id4" />
      <label kind="guard" x="20" y="234">!exceptionOccurred</label>
      <label kind="assignment" x="20" y="247">t = 0</label>
      <label kind="synchronisation" x="20" y="221">cExampleCFI_processVerifyPIN?</label>
    </transition>
    <transition>
      <source ref="id3a" />
      <target ref="id3aa" />
      <label kind="guard" x="20" y="221">exceptionOccurred == true</label>
      <label kind="assignment" x="20" y="234">osp = 0, t = 0</label>
      <label kind="synchronisation" x="20" y="247">cExampleCFI_processVerifyPIN?</label>
    </transition>
    <transition>
      <source ref="id3aa" />
      <target ref="id-1" />
      <label kind="synchronisation" x="20" y="247">cExampleCFI_ExampleCFI!</label>
    </transition>
    <transition>
      <source ref="id4" />
      <target ref="id5" />
      <label kind="guard" x="20" y="260">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="273">osp_inc(), os[osp-1] = H(cp0), t = 0</label>
    </transition>
    <transition>
      <source ref="id5" />
      <target ref="id6" />
      <label kind="guard" x="20" y="325">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="338">osp_inc(), os[osp - 1] = 2, t = 0</label>
    </transition>
    <transition>
      <source ref="id6" />
      <target ref="id11" />
      <label kind="guard" x="20" y="390">t == 1 &amp;&amp; ifcmpeq() &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="403">osp_dec(2), t = 0</label>
      <nail x="-50" y="552" />
    </transition>
    <transition>
      <source ref="id6" />
      <target ref="id7" />
      <label kind="guard" x="20" y="390">t == 1 &amp;&amp; !ifcmpeq() &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="403">opstack_fault = osp &lt; 2 ? true : opstack_fault, osp_dec(2), t = 0</label>
    </transition>
    <transition>
      <source ref="id7" />
      <target ref="id8" />
      <label kind="guard" x="20" y="455">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="468">osp_inc(), os[osp-1] = alocNew(-1), t = 0</label>
    </transition>
    <transition>
      <source ref="id8" />
      <target ref="id9" />
      <label kind="guard" x="20" y="533">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="520">osp_dec(1), osp_inc(), osp_inc(), os[osp - 1] = os[osp - 2]</label>
    </transition>
    <transition>
      <source ref="id9" />
      <target ref="id9a" />
      <label kind="guard" x="20" y="585">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="598">osp_dec(1), t = 0</label>
    </transition>
    <transition>
      <source ref="id9a" />
      <target ref="id10" />
      <label kind="guard" x="20" y="611">t == 5</label>
      <label kind="assignment" x="20" y="624">t = 0</label>
    </transition>
    <transition>
      <source ref="id10" />
      <target ref="id10a" />
      <label kind="guard" x="20" y="650">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="663">exceptionOccurred = true</label>
    </transition>
    <transition>
      <source ref="id10a" />
      <target ref="id-1" />
      <label kind="synchronisation" x="20" y="676">cExampleCFI_ExampleCFI!</label>
    </transition>
    <transition>
      <source ref="id11" />
      <target ref="id-1" />
      <label kind="guard" x="20" y="715">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="754">osp = 0, t = 0</label>
      <label kind="synchronisation" x="20" y="728">cExampleCFI_ExampleCFI!</label>
      <nail x="-100" y="325" />
    </transition>
    <transition>
      <source ref="id0" />
      <target ref="id0" />
      <label kind="guard" x="20" y="0">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="13">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="26">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id1" />
      <target ref="id1" />
      <label kind="guard" x="20" y="65">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="78">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="91">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id2" />
      <target ref="id2" />
      <label kind="guard" x="20" y="130">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="143">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="156">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id3" />
      <target ref="id3" />
      <label kind="guard" x="20" y="195">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="208">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="221">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id4" />
      <target ref="id4" />
      <label kind="guard" x="20" y="260">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="273">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="286">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id5" />
      <target ref="id5" />
      <label kind="guard" x="20" y="325">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="338">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="351">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id6" />
      <target ref="id6" />
      <label kind="guard" x="20" y="390">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="403">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="416">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id7" />
      <target ref="id7" />
      <label kind="guard" x="20" y="455">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="468">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="481">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id8" />
      <target ref="id8" />
      <label kind="guard" x="20" y="520">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="533">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="546">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id9" />
      <target ref="id9" />
      <label kind="guard" x="20" y="585">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="598">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="611">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id10" />
      <target ref="id10" />
      <label kind="guard" x="20" y="650">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="663">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="676">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id11" />
      <target ref="id11" />
      <label kind="guard" x="20" y="715">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="728">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="741">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
  </template>
  <template>
    <name>ExampleCFI_processVerifyPIN</name>
    <declaration>const int os_size = 10;
const int locs_size = 10;
int os[os_size]; 
int osp = 0;
int locs[locs_size];

void osp_inc(){
    if (osp &gt;= os_size - 1){
        opstack_fault = true;
        return;
    }
    osp++;
    return;
}

void osp_dec(int i){
    if (osp &lt; i){
        opstack_fault = true;
        return;
    }
    osp -= i;
    return;
}

bool ifcmpme(){
    if (osp &gt; 1){
        return os[osp-2] &gt;= os[osp - 1];
    }
    return false;
}

bool ifcmpeq(){
    if (osp &gt; 1){
        return os[osp-2] == os[osp - 1];
    }
    return false;
}

bool ifcmpge(){
    if (osp &gt; 1){
        return os[osp - 2] &gt;= os[osp - 1] ;
    }
    return false;
}

bool ifcmpne(){
    if (osp &gt; 1){
        return os[osp - 2] != os[osp - 1] ;
    }
    return false;
}


bool ifeq(){
    if (osp &gt; 0){
        return os[osp - 1] == 0;
    }
    return false;
}</declaration>
    <location id="id-1" x="0" y="-65">
      <name x="20" y="-78">processVerifyPIN</name>
      <label kind="exponentialrate" x="-70" y="-65">1</label>
    </location>
    <location id="id0" x="0" y="0">
      <name x="20" y="-13">pc0__iconst_4</name>
      <label kind="invariant" x="-70" y="0">t &lt;= 1</label>
    </location>
    <location id="id1" x="0" y="65">
      <name x="20" y="52">pc1__istore_1</name>
      <label kind="invariant" x="-70" y="65">t &lt;= 1</label>
    </location>
    <location id="id2" x="0" y="130">
      <name x="20" y="117">pc2__sipush_255</name>
      <label kind="invariant" x="-70" y="130">t &lt;= 1</label>
    </location>
    <location id="id3" x="0" y="195">
      <name x="20" y="182">pc5__istore_2</name>
      <label kind="invariant" x="-70" y="195">t &lt;= 1</label>
    </location>
    <location id="id4" x="0" y="260">
      <name x="20" y="247">pc6__aload_0</name>
      <label kind="invariant" x="-70" y="260">t &lt;= 1</label>
    </location>
    <location id="id5" x="0" y="325">
      <name x="20" y="312">pc7__invokespecial_short_ExampleCFI_setIncomingAndReceive_</name>
      <label kind="invariant" x="-70" y="325">t &lt;= 1</label>
    </location>
    <location id="id6" x="0" y="390">
      <name x="20" y="377">pc10__istore_4</name>
      <label kind="invariant" x="-70" y="390">t &lt;= 1</label>
    </location>
    <location id="id7" x="0" y="455">
      <name x="20" y="442">pc12__iload_4</name>
      <label kind="invariant" x="-70" y="455">t &lt;= 1</label>
    </location>
    <location id="id8" x="0" y="520">
      <name x="20" y="507">pc14__iload_1</name>
      <label kind="invariant" x="-70" y="520">t &lt;= 1</label>
    </location>
    <location id="id9" x="0" y="585">
      <name x="20" y="572">pc15__ifcmpge_11</name>
      <label kind="invariant" x="-70" y="585">t &lt;= 1</label>
    </location>
    <location id="id10" x="0" y="650">
      <name x="20" y="637">pc18__new_java_lang_Exception</name>
      <label kind="invariant" x="-70" y="650">t &lt;= 1</label>
    </location>
    <location id="id11" x="0" y="715">
      <name x="20" y="702">pc21__dup</name>
      <label kind="invariant" x="-70" y="715">t &lt;= 1</label>
    </location>
    <location id="id12" x="0" y="780">
      <name x="20" y="767">pc22__invokespecial_void_java_lang_Exception_init_</name>
      <label kind="invariant" x="-70" y="780">t &lt;= 1</label>
    </location>
    <location id="id13" x="0" y="845">
      <name x="20" y="832">pc25__athrow</name>
      <label kind="invariant" x="-70" y="845">t &lt;= 1</label>
    </location>
    <location id="id14" x="0" y="910">
      <name x="20" y="897">pc26__aload_0</name>
      <label kind="invariant" x="-70" y="910">t &lt;= 1</label>
    </location>
    <location id="id15" x="0" y="975">
      <name x="20" y="962">pc27__invokespecial_bool_ExampleCFI_isInvalid_</name>
      <label kind="invariant" x="-70" y="975">t &lt;= 1</label>
    </location>
    <location id="id16" x="0" y="1040">
      <name x="20" y="1027">pc30__ifeq_16</name>
      <label kind="invariant" x="-70" y="1040">t &lt;= 1</label>
    </location>
    <location id="id17" x="0" y="1105">
      <name x="20" y="1092">pc33__aload_0</name>
      <label kind="invariant" x="-70" y="1105">t &lt;= 1</label>
    </location>
    <location id="id18" x="0" y="1170">
      <name x="20" y="1157">pc34__invokespecial_int_ExampleCFI_getTriesRemaining_</name>
      <label kind="invariant" x="-70" y="1170">t &lt;= 1</label>
    </location>
    <location id="id19" x="0" y="1235">
      <name x="20" y="1222">pc37__istore_3</name>
      <label kind="invariant" x="-70" y="1235">t &lt;= 1</label>
    </location>
    <location id="id20" x="0" y="1300">
      <name x="20" y="1287">pc38__new_java_lang_Exception</name>
      <label kind="invariant" x="-70" y="1300">t &lt;= 1</label>
    </location>
    <location id="id21" x="0" y="1365">
      <name x="20" y="1352">pc41__dup</name>
      <label kind="invariant" x="-70" y="1365">t &lt;= 1</label>
    </location>
    <location id="id22" x="0" y="1430">
      <name x="20" y="1417">pc42__invokespecial_void_java_lang_Exception_init_</name>
      <label kind="invariant" x="-70" y="1430">t &lt;= 1</label>
    </location>
    <location id="id23" x="0" y="1495">
      <name x="20" y="1482">pc45__athrow</name>
      <label kind="invariant" x="-70" y="1495">t &lt;= 1</label>
    </location>
    <location id="id24" x="0" y="1560">
      <name x="20" y="1547">pc46__return</name>
      <label kind="invariant" x="-70" y="1560">t &lt;= 1</label>
    </location>
    <location id="id5a" x="200" y="351">
      <name x="220" y="338"></name>
      <label kind="exponentialrate" x="130" y="351">1</label>
    </location>
    <location id="id5aa" x="200" y="377">
      <name x="220" y="364"></name>
      <label kind="exponentialrate" x="330" y="377">1</label>
      <urgent />
    </location>
    <location id="id12a" x="200" y="806">
      <name x="220" y="793"></name>
      <label kind="invariant" x="0" y="0">t &lt;= 5</label>
    </location>
    <location id="id13a" x="200" y="871">
      <name x="220" y="858"></name>
      <label kind="exponentialrate" x="130" y="871">1</label>
      <urgent />
    </location>
    <location id="id15a" x="200" y="1001">
      <name x="220" y="988"></name>
      <label kind="exponentialrate" x="130" y="1001">1</label>
    </location>
    <location id="id15aa" x="200" y="1027">
      <name x="220" y="1014"></name>
      <label kind="exponentialrate" x="330" y="1027">1</label>
      <urgent />
    </location>
    <location id="id18a" x="200" y="1196">
      <name x="220" y="1183"></name>
      <label kind="exponentialrate" x="130" y="1196">1</label>
    </location>
    <location id="id18aa" x="200" y="1222">
      <name x="220" y="1209"></name>
      <label kind="exponentialrate" x="330" y="1222">1</label>
      <urgent />
    </location>
    <location id="id22a" x="200" y="1456">
      <name x="220" y="1443"></name>
      <label kind="invariant" x="0" y="0">t &lt;= 5</label>
    </location>
    <location id="id23a" x="200" y="1521">
      <name x="220" y="1508"></name>
      <label kind="exponentialrate" x="130" y="1521">1</label>
      <urgent />
    </location>
    <init ref="id-1" />
    <transition>
      <source ref="id-1" />
      <target ref="id0" />
      <label kind="guard" x="20" y="-65">t == 1</label>
      <label kind="assignment" x="20" y="-39">locs[0] = par0, t = 0</label>
      <label kind="synchronisation" x="20" y="-52">cExampleCFI_processVerifyPIN?</label>
    </transition>
    <transition>
      <source ref="id0" />
      <target ref="id1" />
      <label kind="guard" x="20" y="0">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="13">osp_inc(), os[osp - 1] = 4, t = 0</label>
    </transition>
    <transition>
      <source ref="id1" />
      <target ref="id2" />
      <label kind="guard" x="20" y="78">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="65">osp_dec(1), locs[1] = os[osp]</label>
    </transition>
    <transition>
      <source ref="id2" />
      <target ref="id3" />
      <label kind="guard" x="20" y="143">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="130">osp_inc(), os[osp] = 255</label>
    </transition>
    <transition>
      <source ref="id3" />
      <target ref="id4" />
      <label kind="guard" x="20" y="208">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="195">osp_dec(1), locs[2] = os[osp]</label>
    </transition>
    <transition>
      <source ref="id4" />
      <target ref="id5" />
      <label kind="guard" x="20" y="260">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="273"> osp_inc(), os[osp - 1] = locs[0], t = 0</label>
    </transition>
    <transition>
      <source ref="id5" />
      <target ref="id5a" />
      <label kind="guard" x="20" y="325">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="338">osp_dec(1), t = 0, par0 = os[osp]</label>
      <label kind="synchronisation" x="20" y="351">cExampleCFI_setIncomingAndReceive!</label>
    </transition>
    <transition>
      <source ref="id5a" />
      <target ref="id6" />
      <label kind="guard" x="20" y="364">!exceptionOccurred</label>
      <label kind="assignment" x="20" y="377">t = 0, os[osp] = par0, osp_inc()</label>
      <label kind="synchronisation" x="20" y="351">cExampleCFI_setIncomingAndReceive?</label>
    </transition>
    <transition>
      <source ref="id5a" />
      <target ref="id5aa" />
      <label kind="guard" x="20" y="351">exceptionOccurred == true</label>
      <label kind="assignment" x="20" y="364">osp = 0, t = 0</label>
      <label kind="synchronisation" x="20" y="377">cExampleCFI_setIncomingAndReceive?</label>
    </transition>
    <transition>
      <source ref="id5aa" />
      <target ref="id-1" />
      <label kind="synchronisation" x="20" y="377">cExampleCFI_processVerifyPIN!</label>
    </transition>
    <transition>
      <source ref="id6" />
      <target ref="id7" />
      <label kind="guard" x="20" y="403">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="390">osp_dec(1), locs[4] = os[osp]</label>
    </transition>
    <transition>
      <source ref="id7" />
      <target ref="id8" />
      <label kind="guard" x="20" y="468">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="455">osp_inc(), os[osp - 1] = locs[4]</label>
    </transition>
    <transition>
      <source ref="id8" />
      <target ref="id9" />
      <label kind="guard" x="20" y="533">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="520">osp_inc(), os[osp - 1] = locs[1]</label>
    </transition>
    <transition>
      <source ref="id9" />
      <target ref="id10" />
      <label kind="guard" x="20" y="585">t == 1 &amp;&amp; !ifcmpge() &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="598">osp_dec(2)</label>
    </transition>
    <transition>
      <source ref="id9" />
      <target ref="id14" />
      <label kind="guard" x="20" y="585">t == 1 &amp;&amp; ifcmpge() &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="598">osp_dec(2)</label>
      <nail x="-50" y="747" />
    </transition>
    <transition>
      <source ref="id10" />
      <target ref="id11" />
      <label kind="guard" x="20" y="650">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="663">osp_inc(), os[osp-1] = alocNew(-1), t = 0</label>
    </transition>
    <transition>
      <source ref="id11" />
      <target ref="id12" />
      <label kind="guard" x="20" y="728">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="715">osp_dec(1), osp_inc(), osp_inc(), os[osp - 1] = os[osp - 2]</label>
    </transition>
    <transition>
      <source ref="id12" />
      <target ref="id12a" />
      <label kind="guard" x="20" y="780">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="793">osp_dec(1), t = 0</label>
    </transition>
    <transition>
      <source ref="id12a" />
      <target ref="id13" />
      <label kind="guard" x="20" y="806">t == 5</label>
      <label kind="assignment" x="20" y="819">t = 0</label>
    </transition>
    <transition>
      <source ref="id13" />
      <target ref="id13a" />
      <label kind="guard" x="20" y="845">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="858">exceptionOccurred = true</label>
    </transition>
    <transition>
      <source ref="id13a" />
      <target ref="id-1" />
      <label kind="synchronisation" x="20" y="871">cExampleCFI_processVerifyPIN!</label>
    </transition>
    <transition>
      <source ref="id14" />
      <target ref="id15" />
      <label kind="guard" x="20" y="910">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="923"> osp_inc(), os[osp - 1] = locs[0], t = 0</label>
    </transition>
    <transition>
      <source ref="id15" />
      <target ref="id15a" />
      <label kind="guard" x="20" y="975">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="988">osp_dec(1), t = 0, par0 = os[osp]</label>
      <label kind="synchronisation" x="20" y="1001">cExampleCFI_isInvalid!</label>
    </transition>
    <transition>
      <source ref="id15a" />
      <target ref="id16" />
      <label kind="guard" x="20" y="1014">!exceptionOccurred</label>
      <label kind="assignment" x="20" y="1027">t = 0, os[osp] = par0, osp_inc()</label>
      <label kind="synchronisation" x="20" y="1001">cExampleCFI_isInvalid?</label>
    </transition>
    <transition>
      <source ref="id15a" />
      <target ref="id15aa" />
      <label kind="guard" x="20" y="1001">exceptionOccurred == true</label>
      <label kind="assignment" x="20" y="1014">osp = 0, t = 0</label>
      <label kind="synchronisation" x="20" y="1027">cExampleCFI_isInvalid?</label>
    </transition>
    <transition>
      <source ref="id15aa" />
      <target ref="id-1" />
      <label kind="synchronisation" x="20" y="1027">cExampleCFI_processVerifyPIN!</label>
    </transition>
    <transition>
      <source ref="id16" />
      <target ref="id24" />
      <label kind="guard" x="20" y="1040">t == 1 &amp;&amp; ifeq() &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="1053">osp_dec(1), t = 0</label>
      <nail x="-50" y="1300" />
    </transition>
    <transition>
      <source ref="id16" />
      <target ref="id17" />
      <label kind="guard" x="20" y="1040">t == 1 &amp;&amp; !ifeq() &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="1053">opstack_fault = osp &lt; 1 ? true : opstack_fault, osp_dec(1), t = 0</label>
    </transition>
    <transition>
      <source ref="id17" />
      <target ref="id18" />
      <label kind="guard" x="20" y="1105">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="1118"> osp_inc(), os[osp - 1] = locs[0], t = 0</label>
    </transition>
    <transition>
      <source ref="id18" />
      <target ref="id18a" />
      <label kind="guard" x="20" y="1170">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="1183">osp_dec(1), t = 0, par0 = os[osp]</label>
      <label kind="synchronisation" x="20" y="1196">cExampleCFI_getTriesRemaining!</label>
    </transition>
    <transition>
      <source ref="id18a" />
      <target ref="id19" />
      <label kind="guard" x="20" y="1209">!exceptionOccurred</label>
      <label kind="assignment" x="20" y="1222">t = 0, os[osp] = par0, osp_inc()</label>
      <label kind="synchronisation" x="20" y="1196">cExampleCFI_getTriesRemaining?</label>
    </transition>
    <transition>
      <source ref="id18a" />
      <target ref="id18aa" />
      <label kind="guard" x="20" y="1196">exceptionOccurred == true</label>
      <label kind="assignment" x="20" y="1209">osp = 0, t = 0</label>
      <label kind="synchronisation" x="20" y="1222">cExampleCFI_getTriesRemaining?</label>
    </transition>
    <transition>
      <source ref="id18aa" />
      <target ref="id-1" />
      <label kind="synchronisation" x="20" y="1222">cExampleCFI_processVerifyPIN!</label>
    </transition>
    <transition>
      <source ref="id19" />
      <target ref="id20" />
      <label kind="guard" x="20" y="1248">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="1235">osp_dec(1), locs[3] = os[osp]</label>
    </transition>
    <transition>
      <source ref="id20" />
      <target ref="id21" />
      <label kind="guard" x="20" y="1300">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="1313">osp_inc(), os[osp-1] = alocNew(-1), t = 0</label>
    </transition>
    <transition>
      <source ref="id21" />
      <target ref="id22" />
      <label kind="guard" x="20" y="1378">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="1365">osp_dec(1), osp_inc(), osp_inc(), os[osp - 1] = os[osp - 2]</label>
    </transition>
    <transition>
      <source ref="id22" />
      <target ref="id22a" />
      <label kind="guard" x="20" y="1430">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="1443">osp_dec(1), t = 0</label>
    </transition>
    <transition>
      <source ref="id22a" />
      <target ref="id23" />
      <label kind="guard" x="20" y="1456">t == 5</label>
      <label kind="assignment" x="20" y="1469">t = 0</label>
    </transition>
    <transition>
      <source ref="id23" />
      <target ref="id23a" />
      <label kind="guard" x="20" y="1495">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="1508">exceptionOccurred = true</label>
    </transition>
    <transition>
      <source ref="id23a" />
      <target ref="id-1" />
      <label kind="synchronisation" x="20" y="1521">cExampleCFI_processVerifyPIN!</label>
    </transition>
    <transition>
      <source ref="id24" />
      <target ref="id-1" />
      <label kind="guard" x="20" y="1560">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="1599">osp = 0, t = 0</label>
      <label kind="synchronisation" x="20" y="1573">cExampleCFI_processVerifyPIN!</label>
      <nail x="-100" y="747" />
    </transition>
    <transition>
      <source ref="id0" />
      <target ref="id0" />
      <label kind="guard" x="20" y="0">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="13">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="26">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id1" />
      <target ref="id1" />
      <label kind="guard" x="20" y="65">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="78">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="91">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id2" />
      <target ref="id2" />
      <label kind="guard" x="20" y="130">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="143">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="156">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id3" />
      <target ref="id3" />
      <label kind="guard" x="20" y="195">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="208">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="221">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id4" />
      <target ref="id4" />
      <label kind="guard" x="20" y="260">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="273">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="286">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id5" />
      <target ref="id5" />
      <label kind="guard" x="20" y="325">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="338">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="351">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id6" />
      <target ref="id6" />
      <label kind="guard" x="20" y="390">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="403">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="416">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id7" />
      <target ref="id7" />
      <label kind="guard" x="20" y="455">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="468">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="481">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id8" />
      <target ref="id8" />
      <label kind="guard" x="20" y="520">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="533">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="546">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id9" />
      <target ref="id9" />
      <label kind="guard" x="20" y="585">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="598">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="611">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id10" />
      <target ref="id10" />
      <label kind="guard" x="20" y="650">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="663">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="676">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id11" />
      <target ref="id11" />
      <label kind="guard" x="20" y="715">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="728">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="741">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id12" />
      <target ref="id12" />
      <label kind="guard" x="20" y="780">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="793">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="806">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id13" />
      <target ref="id13" />
      <label kind="guard" x="20" y="845">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="858">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="871">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id14" />
      <target ref="id14" />
      <label kind="guard" x="20" y="910">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="923">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="936">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id15" />
      <target ref="id15" />
      <label kind="guard" x="20" y="975">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="988">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="1001">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id16" />
      <target ref="id16" />
      <label kind="guard" x="20" y="1040">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="1053">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="1066">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id17" />
      <target ref="id17" />
      <label kind="guard" x="20" y="1105">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="1118">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="1131">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id18" />
      <target ref="id18" />
      <label kind="guard" x="20" y="1170">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="1183">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="1196">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id19" />
      <target ref="id19" />
      <label kind="guard" x="20" y="1235">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="1248">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="1261">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id20" />
      <target ref="id20" />
      <label kind="guard" x="20" y="1300">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="1313">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="1326">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id21" />
      <target ref="id21" />
      <label kind="guard" x="20" y="1365">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="1378">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="1391">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id22" />
      <target ref="id22" />
      <label kind="guard" x="20" y="1430">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="1443">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="1456">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id23" />
      <target ref="id23" />
      <label kind="guard" x="20" y="1495">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="1508">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="1521">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id24" />
      <target ref="id24" />
      <label kind="guard" x="20" y="1560">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="1573">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="1586">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
  </template>
  <template>
    <name>ExampleCFI_main</name>
    <declaration>const int os_size = 10;
const int locs_size = 10;
int os[os_size]; 
int osp = 0;
int locs[locs_size];

void osp_inc(){
    if (osp &gt;= os_size - 1){
        opstack_fault = true;
        return;
    }
    osp++;
    return;
}

void osp_dec(int i){
    if (osp &lt; i){
        opstack_fault = true;
        return;
    }
    osp -= i;
    return;
}

bool ifcmpme(){
    if (osp &gt; 1){
        return os[osp-2] &gt;= os[osp - 1];
    }
    return false;
}

bool ifcmpeq(){
    if (osp &gt; 1){
        return os[osp-2] == os[osp - 1];
    }
    return false;
}

bool ifcmpge(){
    if (osp &gt; 1){
        return os[osp - 2] &gt;= os[osp - 1] ;
    }
    return false;
}

bool ifcmpne(){
    if (osp &gt; 1){
        return os[osp - 2] != os[osp - 1] ;
    }
    return false;
}


bool ifeq(){
    if (osp &gt; 0){
        return os[osp - 1] == 0;
    }
    return false;
}</declaration>
    <location id="id-1" x="0" y="-65">
      <name x="20" y="-78">main</name>
      <label kind="exponentialrate" x="-70" y="-65">1</label>
      <urgent />
    </location>
    <location id="id0" x="0" y="0">
      <name x="20" y="-13">pc0__new_ExampleCFI</name>
      <label kind="invariant" x="-70" y="0">t &lt;= 1</label>
    </location>
    <location id="id1" x="0" y="65">
      <name x="20" y="52">pc3__dup</name>
      <label kind="invariant" x="-70" y="65">t &lt;= 1</label>
    </location>
    <location id="id2" x="0" y="130">
      <name x="20" y="117">pc4__invokespecial_void_ExampleCFI_init_</name>
      <label kind="invariant" x="-70" y="130">t &lt;= 1</label>
    </location>
    <location id="id3" x="0" y="195">
      <name x="20" y="182">pc7__astore_1</name>
      <label kind="invariant" x="-70" y="195">t &lt;= 1</label>
    </location>
    <location id="id4" x="0" y="260">
      <name x="20" y="247">pc8__goto_4</name>
      <label kind="invariant" x="-70" y="260">t &lt;= 1</label>
    </location>
    <location id="id5" x="0" y="325">
      <name x="20" y="312">pc11__astore_1</name>
      <label kind="invariant" x="-70" y="325">t &lt;= 1</label>
    </location>
    <location id="id6" x="0" y="390">
      <name x="20" y="377">pc12__return</name>
      <label kind="invariant" x="-70" y="390">t &lt;= 1</label>
    </location>
    <location id="id2a" x="200" y="156">
      <name x="220" y="143"></name>
      <label kind="exponentialrate" x="130" y="156">1</label>
    </location>
    <location id="id2aa" x="200" y="182">
      <name x="220" y="169"></name>
      <label kind="exponentialrate" x="330" y="182">1</label>
      <urgent />
    </location>
    <location id="id6a" x="200" y="416">
      <name x="220" y="403">Done</name>
      <label kind="exponentialrate" x="0" y="0">1</label>
    </location>
    <init ref="id-1" />
    <transition>
      <source ref="id-1" />
      <target ref="id0" />
      <label kind="assignment" x="20" y="-65">t = 0</label>
    </transition>
    <transition>
      <source ref="id0" />
      <target ref="id1" />
      <label kind="guard" x="20" y="0">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="13">osp_inc(), os[osp-1] = alocNew(1), t = 0</label>
    </transition>
    <transition>
      <source ref="id1" />
      <target ref="id2" />
      <label kind="guard" x="20" y="78">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="65">osp_dec(1), osp_inc(), osp_inc(), os[osp - 1] = os[osp - 2]</label>
    </transition>
    <transition>
      <source ref="id2" />
      <target ref="id2a" />
      <label kind="guard" x="20" y="130">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="143">osp_dec(1), t = 0, par0 = os[osp]</label>
      <label kind="synchronisation" x="20" y="156">cExampleCFI_ExampleCFI!</label>
    </transition>
    <transition>
      <source ref="id2a" />
      <target ref="id3" />
      <label kind="guard" x="20" y="169">!exceptionOccurred</label>
      <label kind="assignment" x="20" y="182">t = 0</label>
      <label kind="synchronisation" x="20" y="156">cExampleCFI_ExampleCFI?</label>
    </transition>
    <transition>
      <source ref="id2a" />
      <target ref="id2aa" />
      <label kind="guard" x="20" y="156">exceptionOccurred == true</label>
      <label kind="assignment" x="20" y="169">osp_inc(), t = 0</label>
      <label kind="synchronisation" x="20" y="182">cExampleCFI_ExampleCFI?</label>
    </transition>
    <transition>
      <source ref="id2aa" />
      <target ref="id5" />
      <label kind="synchronisation" x="20" y="182">cExampleCFI_main!</label>
    </transition>
    <transition>
      <source ref="id3" />
      <target ref="id4" />
      <label kind="guard" x="20" y="208">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="195">osp_dec(1), locs[1] = os[osp]</label>
    </transition>
    <transition>
      <source ref="id4" />
      <target ref="id6" />
      <label kind="guard" x="20" y="260">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <nail x="-50" y="325" />
    </transition>
    <transition>
      <source ref="id5" />
      <target ref="id6" />
      <label kind="guard" x="20" y="338">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="325">osp_dec(1), locs[1] = os[osp]</label>
    </transition>
    <transition>
      <source ref="id6" />
      <target ref="id6a" />
      <label kind="guard" x="20" y="390">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="synchronisation" x="20" y="403">cExampleCFI_main!</label>
    </transition>
    <transition>
      <source ref="id0" />
      <target ref="id0" />
      <label kind="guard" x="20" y="0">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="13">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="26">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id1" />
      <target ref="id1" />
      <label kind="guard" x="20" y="65">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="78">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="91">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id2" />
      <target ref="id2" />
      <label kind="guard" x="20" y="130">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="143">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="156">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id3" />
      <target ref="id3" />
      <label kind="guard" x="20" y="195">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="208">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="221">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id4" />
      <target ref="id4" />
      <label kind="guard" x="20" y="260">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="273">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="286">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id5" />
      <target ref="id5" />
      <label kind="guard" x="20" y="325">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="338">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="351">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id6" />
      <target ref="id6" />
      <label kind="guard" x="20" y="390">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="403">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="416">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
  </template>
  <template>
    <name>ExampleCFI_getTriesRemaining</name>
    <declaration>const int os_size = 10;
const int locs_size = 10;
int os[os_size]; 
int osp = 0;
int locs[locs_size];

void osp_inc(){
    if (osp &gt;= os_size - 1){
        opstack_fault = true;
        return;
    }
    osp++;
    return;
}

void osp_dec(int i){
    if (osp &lt; i){
        opstack_fault = true;
        return;
    }
    osp -= i;
    return;
}

bool ifcmpme(){
    if (osp &gt; 1){
        return os[osp-2] &gt;= os[osp - 1];
    }
    return false;
}

bool ifcmpeq(){
    if (osp &gt; 1){
        return os[osp-2] == os[osp - 1];
    }
    return false;
}

bool ifcmpge(){
    if (osp &gt; 1){
        return os[osp - 2] &gt;= os[osp - 1] ;
    }
    return false;
}

bool ifcmpne(){
    if (osp &gt; 1){
        return os[osp - 2] != os[osp - 1] ;
    }
    return false;
}


bool ifeq(){
    if (osp &gt; 0){
        return os[osp - 1] == 0;
    }
    return false;
}</declaration>
    <location id="id-1" x="0" y="-65">
      <name x="20" y="-78">getTriesRemaining</name>
      <label kind="exponentialrate" x="-70" y="-65">1</label>
    </location>
    <location id="id0" x="0" y="0">
      <name x="20" y="-13">pc0__iconst_2</name>
      <label kind="invariant" x="-70" y="0">t &lt;= 1</label>
    </location>
    <location id="id1" x="0" y="65">
      <name x="20" y="52">pc1__ireturn</name>
      <label kind="invariant" x="-70" y="65">t &lt;= 1</label>
    </location>
    <init ref="id-1" />
    <transition>
      <source ref="id-1" />
      <target ref="id0" />
      <label kind="guard" x="20" y="-65">t == 1</label>
      <label kind="assignment" x="20" y="-39">locs[0] = par0, t = 0</label>
      <label kind="synchronisation" x="20" y="-52">cExampleCFI_getTriesRemaining?</label>
    </transition>
    <transition>
      <source ref="id0" />
      <target ref="id1" />
      <label kind="guard" x="20" y="0">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="13">osp_inc(), os[osp - 1] = 2, t = 0</label>
    </transition>
    <transition>
      <source ref="id1" />
      <target ref="id-1" />
      <label kind="guard" x="20" y="65">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="104">osp_dec(1), par0 = os[osp], osp = 0, t = 0</label>
      <label kind="synchronisation" x="20" y="78">cExampleCFI_getTriesRemaining!</label>
      <nail x="-100" y="0" />
    </transition>
    <transition>
      <source ref="id0" />
      <target ref="id0" />
      <label kind="guard" x="20" y="0">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="13">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="26">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id1" />
      <target ref="id1" />
      <label kind="guard" x="20" y="65">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="78">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="91">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
  </template>
  <template>
    <name>ExampleCFI_setIncomingAndReceive</name>
    <declaration>const int os_size = 10;
const int locs_size = 10;
int os[os_size]; 
int osp = 0;
int locs[locs_size];

void osp_inc(){
    if (osp &gt;= os_size - 1){
        opstack_fault = true;
        return;
    }
    osp++;
    return;
}

void osp_dec(int i){
    if (osp &lt; i){
        opstack_fault = true;
        return;
    }
    osp -= i;
    return;
}

bool ifcmpme(){
    if (osp &gt; 1){
        return os[osp-2] &gt;= os[osp - 1];
    }
    return false;
}

bool ifcmpeq(){
    if (osp &gt; 1){
        return os[osp-2] == os[osp - 1];
    }
    return false;
}

bool ifcmpge(){
    if (osp &gt; 1){
        return os[osp - 2] &gt;= os[osp - 1] ;
    }
    return false;
}

bool ifcmpne(){
    if (osp &gt; 1){
        return os[osp - 2] != os[osp - 1] ;
    }
    return false;
}


bool ifeq(){
    if (osp &gt; 0){
        return os[osp - 1] == 0;
    }
    return false;
}</declaration>
    <location id="id-1" x="0" y="-65">
      <name x="20" y="-78">setIncomingAndReceive</name>
      <label kind="exponentialrate" x="-70" y="-65">1</label>
    </location>
    <location id="id0" x="0" y="0">
      <name x="20" y="-13">pc0__getstatic_ExampleCFI_flag___int</name>
      <label kind="invariant" x="-70" y="0">t &lt;= 1</label>
    </location>
    <location id="id1" x="0" y="65">
      <name x="20" y="52">pc3__iconst_1</name>
      <label kind="invariant" x="-70" y="65">t &lt;= 1</label>
    </location>
    <location id="id2" x="0" y="130">
      <name x="20" y="117">pc4__iadd</name>
      <label kind="invariant" x="-70" y="130">t &lt;= 1</label>
    </location>
    <location id="id3" x="0" y="195">
      <name x="20" y="182">pc5__putstatic_ExampleCFI_flag___int</name>
      <label kind="invariant" x="-70" y="195">t &lt;= 1</label>
    </location>
    <location id="id4" x="0" y="260">
      <name x="20" y="247">pc8__iconst_5</name>
      <label kind="invariant" x="-70" y="260">t &lt;= 1</label>
    </location>
    <location id="id5" x="0" y="325">
      <name x="20" y="312">pc9__ireturn</name>
      <label kind="invariant" x="-70" y="325">t &lt;= 1</label>
    </location>
    <init ref="id-1" />
    <transition>
      <source ref="id-1" />
      <target ref="id0" />
      <label kind="guard" x="20" y="-65">t == 1</label>
      <label kind="assignment" x="20" y="-39">locs[0] = par0, t = 0</label>
      <label kind="synchronisation" x="20" y="-52">cExampleCFI_setIncomingAndReceive?</label>
    </transition>
    <transition>
      <source ref="id0" />
      <target ref="id1" />
      <label kind="guard" x="20" y="0">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="13">osp_inc(), os[osp-1] = H(cp0), t = 0</label>
    </transition>
    <transition>
      <source ref="id1" />
      <target ref="id2" />
      <label kind="guard" x="20" y="65">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="78">osp_inc(), os[osp - 1] = 1, t = 0</label>
    </transition>
    <transition>
      <source ref="id2" />
      <target ref="id3" />
      <label kind="guard" x="20" y="130">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="143">osp_dec(2), osp_inc(), os[osp - 1] = os[osp - 1] + os[osp], t = 0</label>
    </transition>
    <transition>
      <source ref="id3" />
      <target ref="id4" />
      <label kind="guard" x="20" y="195">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="208">osp_dec(1), setH(cp0, os[osp]), t = 0</label>
    </transition>
    <transition>
      <source ref="id4" />
      <target ref="id5" />
      <label kind="guard" x="20" y="260">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="273">osp_inc(), os[osp - 1] = 5, t = 0</label>
    </transition>
    <transition>
      <source ref="id5" />
      <target ref="id-1" />
      <label kind="guard" x="20" y="325">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
      <label kind="assignment" x="20" y="364">osp_dec(1), par0 = os[osp], osp = 0, t = 0</label>
      <label kind="synchronisation" x="20" y="338">cExampleCFI_setIncomingAndReceive!</label>
      <nail x="-100" y="130" />
    </transition>
    <transition>
      <source ref="id0" />
      <target ref="id0" />
      <label kind="guard" x="20" y="0">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="13">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="26">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id1" />
      <target ref="id1" />
      <label kind="guard" x="20" y="65">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="78">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="91">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id2" />
      <target ref="id2" />
      <label kind="guard" x="20" y="130">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="143">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="156">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id3" />
      <target ref="id3" />
      <label kind="guard" x="20" y="195">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="208">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="221">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id4" />
      <target ref="id4" />
      <label kind="guard" x="20" y="260">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="273">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="286">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
    <transition>
      <source ref="id5" />
      <target ref="id5" />
      <label kind="guard" x="20" y="325">faultTime &lt;= globalClock</label>
      <label kind="assignment" x="20" y="338">locs[locsPos] ^= 1 &lt;&lt; locsBitPos, faultTime = 1000</label>
      <label kind="select" x="20" y="351">locsPos:int[0,locs_size - 1], locsBitPos:int[0,7]</label>
    </transition>
  </template>
  <template>
    <name>FaultInj</name>
    <declaration></declaration>
    <location id="id0" x="-17" y="-85">
      <name x="3" y="-98" />
      <label kind="exponentialrate" x="-205" y="17">1</label>
    </location>
    <location id="id1" x="-144" y="-85">
      <name x="-124" y="-98" />
    </location>
    <init ref="id1" />
    <transition>
      <source ref="id1" />
      <target ref="id0" />
      <label kind="select" x="-100" y="-58">i:int[0,80]</label>
      <label kind="assignment" x="-110" y="-68">faultTime = i</label>
    </transition>
  </template>
  <system>Fault = FaultInj();
iExampleCFI_isInvalid = ExampleCFI_isInvalid();
iExampleCFI_ExampleCFI = ExampleCFI_ExampleCFI();
iExampleCFI_processVerifyPIN = ExampleCFI_processVerifyPIN();
iExampleCFI_main = ExampleCFI_main();
iExampleCFI_getTriesRemaining = ExampleCFI_getTriesRemaining();
iExampleCFI_setIncomingAndReceive = ExampleCFI_setIncomingAndReceive();

system Fault, iExampleCFI_isInvalid, iExampleCFI_ExampleCFI, iExampleCFI_processVerifyPIN, iExampleCFI_main, iExampleCFI_getTriesRemaining, iExampleCFI_setIncomingAndReceive;</system>
  <queries>queries<query>query<formula>A&lt;&gt; iExampleCFI_main.Done &amp;&amp; !opstack_fault &amp;&amp; exceptionOccurred</formula></query><query>query<formula>Pr[&lt;= 100] (&lt;&gt; iExampleCFI_main.Done &amp;&amp; !opstack_fault &amp;&amp; exceptionOccurred)</formula></query><query>query<formula>E&lt;&gt; opstack_fault</formula></query><query>query<formula>Pr[&lt;= 100] (&lt;&gt; opstack_fault)</formula></query><query>query<formula>E&lt;&gt; iExampleCFI_main.Done &amp;&amp; !opstack_fault &amp;&amp; !exceptionOccurred</formula></query><query>query<formula>Pr[&lt;= 100] (&lt;&gt; iExampleCFI_main.Done &amp;&amp; !opstack_fault &amp;&amp; !exceptionOccurred)</formula></query><query>query<formula></formula></query><query>query<formula>A&lt;&gt; iVirtual_Virtual.pc58__return &amp;&amp; !opstack_fault &amp;&amp; !exceptionOccurred &amp;&amp; iVirtual_Virtual.locs[1] == 3  &amp;&amp; iVirtual_Virtual.locs[2] == 5</formula></query><query>query<formula>E&lt;&gt; iVirtual_Virtual.pc58__return &amp;&amp; !opstack_fault &amp;&amp; !exceptionOccurred &amp;&amp; !(iVirtual_Virtual.locs[1] == 3  &amp;&amp; iVirtual_Virtual.locs[2] == 5)</formula></query><query>query<formula>Pr[&lt;= 100] (&lt;&gt; iVirtual_Virtual.pc58__return &amp;&amp; !opstack_fault &amp;&amp; !exceptionOccurred &amp;&amp; !(iVirtual_Virtual.locs[1] == 3  &amp;&amp; iVirtual_Virtual.locs[2] == 5))</formula></query><query>query<formula></formula></query><query>query<formula>A&lt;&gt; iVirtualCGI_VirtualCGI.pc122_return &amp;&amp; !opstack_fault &amp;&amp; !exceptionOccurred &amp;&amp; iVirtualCGI_VirtualCGI.locs[1] == 3  &amp;&amp; iVirtualCGI_VirtualCGI.locs[2] == 5</formula></query><query>query<formula>E&lt;&gt; iVirtualCGI_VirtualCGI.pc122_return &amp;&amp; !opstack_fault &amp;&amp; !exceptionOccurred &amp;&amp; !(iVirtualCGI_VirtualCGI.locs[1] == 3  &amp;&amp; iVirtualCGI_VirtualCGI.locs[2] == 5)</formula></query><query>query<formula>Pr[&lt;= 100] (&lt;&gt; iVirtualCGI_VirtualCGI.pc122_return &amp;&amp; !opstack_fault &amp;&amp; !exceptionOccurred &amp;&amp; !(iVirtualCGI_VirtualCGI.locs[1] == 3  &amp;&amp; iVirtualCGI_VirtualCGI.locs[2] == 5))</formula></query></queries>
</nta>