<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>clock t;
bool exceptionOccurred;
const int heap_size = 1;
int H[heap_size];
int cp0;
int cp1;
int cp2;
int par0;
int par1;
int par2;
broadcast chan cExample_check;
broadcast chan cExample_Example;
broadcast chan cExample_processVerifyPIN;
broadcast chan cExample_main;
broadcast chan cExample_getTriesRemaining;
broadcast chan cExample_setIncomingAndReceive;
broadcast chan cVirtual;
bool done = false;
bool opstack_fault = false;
int clID = 0;
const int classFields[4] = {0, 3, 2, 3};

int heapPointer = 0;
int alocNew(int classID){
    int ref = heapPointer;
    if(classID &lt; 0) return -1;
    H[ref] = classID;
    heapPointer += classFields[classID];
    return ref;
}


const int classHierarchy[4] = {0, 0, 0, 2};
const int classImpl[4] = {0, 0, 3, 3};
bool signature(int classID, int methodID, int methodClassID)
{
    return methodID &lt; classImpl[classID] ^ (1 &lt;&lt; (methodID - 1)) 
        &amp;&amp; classID == methodClassID;
}

int faultAt = 0;
clock globalClock;
int faultTime;</declaration>
	<template>
		<name>Example_check</name>
		<declaration>const int os_size = 10;
const int locs_size = 10;
int os[os_size]; 
int osp = 0;
int locs[locs_size];

void osp_inc(){
    if (osp &gt;= os_size - 1){
        opstack_fault = true;
        return;
    }
    osp++;
    return;
}

void osp_dec(int i){
    if (osp &lt; i){
        opstack_fault = true;
        return;
    }
    osp -= i;
    return;
}

bool ifcmpme(){
    if (osp &gt; 1){
        return os[osp-2] &gt;= os[osp - 1];
    }
    return false;
}

bool ifcmpeq(){
    if (osp &gt; 1){
        return os[osp-2] == os[osp - 1];
    }
    return false;
}

bool ifeq(){
    if (osp &gt; 1){
        return os[osp - 1] == 0;
    }
    return false;
}</declaration>
		<location id="id0" x="0" y="-65">
			<name x="20" y="-78">check</name>
			<label kind="exponentialrate" x="-70" y="-65">1</label>
		</location>
		<location id="id1" x="0" y="0">
			<name x="20" y="-13">pc0_iconst_0</name>
			<label kind="invariant" x="-70" y="0">t &lt;= 1</label>
		</location>
		<location id="id2" x="0" y="65">
			<name x="20" y="52">pc1_ireturn</name>
			<label kind="invariant" x="-70" y="65">t &lt;= 1</label>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="20" y="-65">t == 1</label>
			<label kind="synchronisation" x="20" y="-52">cExample_check?</label>
			<label kind="assignment" x="20" y="-39">locs[0] = par0, t = 0</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="20" y="0">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="13">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id0"/>
			<label kind="guard" x="20" y="65">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="synchronisation" x="20" y="91">cExample_check!</label>
			<label kind="assignment" x="20" y="78">faultTime = 200</label>
			<nail x="-100" y="0"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="select" x="20" y="26">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="0">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="13">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="-30"/>
			<nail x="30" y="-30"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id2"/>
			<label kind="select" x="20" y="91">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="65">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="78">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="35"/>
			<nail x="30" y="35"/>
		</transition>
	</template>
	<template>
		<name>Example_Example</name>
		<declaration>const int os_size = 10;
const int locs_size = 10;
int os[os_size]; 
int osp = 0;
int locs[locs_size];

void osp_inc(){
    if (osp &gt;= os_size - 1){
        opstack_fault = true;
        return;
    }
    osp++;
    return;
}

void osp_dec(int i){
    if (osp &lt; i){
        opstack_fault = true;
        return;
    }
    osp -= i;
    return;
}

bool ifcmpme(){
    if (osp &gt; 1){
        return os[osp-2] &gt;= os[osp - 1];
    }
    return false;
}

bool ifcmpeq(){
    if (osp &gt; 1){
        return os[osp-2] == os[osp - 1];
    }
    return false;
}

bool ifeq(){
    if (osp &gt; 1){
        return os[osp - 1] == 0;
    }
    return false;
}</declaration>
		<location id="id3" x="0" y="-65">
			<name x="20" y="-78">Example</name>
			<label kind="exponentialrate" x="-70" y="-65">1</label>
		</location>
		<location id="id4" x="0" y="0">
			<name x="20" y="-13">pc0_aload_0</name>
			<label kind="invariant" x="-70" y="0">t &lt;= 1</label>
		</location>
		<location id="id5" x="0" y="65">
			<name x="20" y="52">pc1_invokespecial_void_java_lang_Object_init_</name>
			<label kind="invariant" x="-70" y="65">t &lt;= 1</label>
		</location>
		<location id="id6" x="0" y="130">
			<name x="20" y="117">pc4_aload_0</name>
			<label kind="invariant" x="-70" y="130">t &lt;= 1</label>
		</location>
		<location id="id7" x="0" y="195">
			<name x="20" y="182">pc5_invokespecial_void_Example_processVerifyPIN_</name>
			<label kind="invariant" x="-70" y="195">t &lt;= 1</label>
		</location>
		<location id="id8" x="0" y="260">
			<name x="20" y="247">pc8_return</name>
			<label kind="invariant" x="-70" y="260">t &lt;= 1</label>
		</location>
		<location id="id9" x="200" y="91">
			<label kind="invariant" x="130" y="91">t &lt;= 5</label>
		</location>
		<location id="id10" x="200" y="221">
			<label kind="invariant" x="130" y="221">t &lt;= 5</label>
		</location>
		<init ref="id3"/>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="guard" x="20" y="-65">t == 1</label>
			<label kind="synchronisation" x="20" y="-52">cExample_Example?</label>
			<label kind="assignment" x="20" y="-39">locs[0] = par0, t = 0</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="guard" x="20" y="0">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="13">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id9"/>
			<label kind="guard" x="20" y="65">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="78">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id9"/>
			<label kind="guard" x="20" y="91">t == 10</label>
			<nail x="170" y="61"/>
			<nail x="230" y="61"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id6"/>
			<label kind="guard" x="20" y="91">t == 5</label>
			<label kind="assignment" x="20" y="104">t = 0</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id3"/>
			<label kind="guard" x="20" y="91">exceptionOccurred == true</label>
			<label kind="assignment" x="20" y="104">osp = 0</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id7"/>
			<label kind="guard" x="20" y="130">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="143">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id10"/>
			<label kind="guard" x="20" y="195">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="synchronisation" x="20" y="221">cExample_processVerifyPIN!</label>
			<label kind="assignment" x="20" y="208">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id10"/>
			<label kind="guard" x="20" y="221">t == 10</label>
			<nail x="170" y="191"/>
			<nail x="230" y="191"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="20" y="221">cExample_processVerifyPIN?</label>
			<label kind="assignment" x="20" y="234">t = 0</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id3"/>
			<label kind="guard" x="20" y="221">exceptionOccurred == true</label>
			<label kind="assignment" x="20" y="234">osp = 0</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id3"/>
			<label kind="guard" x="20" y="260">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="synchronisation" x="20" y="286">cExample_Example!</label>
			<label kind="assignment" x="20" y="273">faultTime = 200</label>
			<nail x="-100" y="97"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id4"/>
			<label kind="select" x="20" y="26">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="0">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="13">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="-30"/>
			<nail x="30" y="-30"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id5"/>
			<label kind="select" x="20" y="91">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="65">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="78">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="35"/>
			<nail x="30" y="35"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id6"/>
			<label kind="select" x="20" y="156">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="130">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="143">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="100"/>
			<nail x="30" y="100"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id7"/>
			<label kind="select" x="20" y="221">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="195">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="208">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="165"/>
			<nail x="30" y="165"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id8"/>
			<label kind="select" x="20" y="286">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="260">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="273">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="230"/>
			<nail x="30" y="230"/>
		</transition>
	</template>
	<template>
		<name>Example_processVerifyPIN</name>
		<declaration>const int os_size = 10;
const int locs_size = 10;
int os[os_size]; 
int osp = 0;
int locs[locs_size];

void osp_inc(){
    if (osp &gt;= os_size - 1){
        opstack_fault = true;
        return;
    }
    osp++;
    return;
}

void osp_dec(int i){
    if (osp &lt; i){
        opstack_fault = true;
        return;
    }
    osp -= i;
    return;
}

bool ifcmpme(){
    if (osp &gt; 1){
        return os[osp-2] &gt;= os[osp - 1];
    }
    return false;
}

bool ifcmpeq(){
    if (osp &gt; 1){
        return os[osp-2] == os[osp - 1];
    }
    return false;
}

bool ifeq(){
    if (osp &gt; 1){
        return os[osp - 1] == 0;
    }
    return false;
}
</declaration>
		<location id="id11" x="0" y="-65">
			<name x="20" y="-78">processVerifyPIN</name>
			<label kind="exponentialrate" x="-70" y="-65">1</label>
		</location>
		<location id="id12" x="0" y="0">
			<name x="20" y="-13">pc0_iconst_4</name>
			<label kind="invariant" x="-70" y="0">t &lt;= 1</label>
		</location>
		<location id="id13" x="0" y="65">
			<name x="20" y="52">pc1_istore_1</name>
			<label kind="invariant" x="-70" y="65">t &lt;= 1</label>
		</location>
		<location id="id14" x="0" y="130">
			<name x="20" y="117">pc2_sipush_255</name>
			<label kind="invariant" x="-70" y="130">t &lt;= 1</label>
		</location>
		<location id="id15" x="0" y="195">
			<name x="20" y="182">pc5_istore_2</name>
			<label kind="invariant" x="-70" y="195">t &lt;= 1</label>
		</location>
		<location id="id16" x="0" y="260">
			<name x="20" y="247">pc6_aload_0</name>
			<label kind="invariant" x="-70" y="260">t &lt;= 1</label>
		</location>
		<location id="id17" x="0" y="325">
			<name x="20" y="312">pc7_invokespecial_short_Example_setIncomingAndReceive_</name>
			<label kind="invariant" x="-70" y="325">t &lt;= 1</label>
		</location>
		<location id="id18" x="0" y="390">
			<name x="20" y="377">pc10_istore_4</name>
			<label kind="invariant" x="-70" y="390">t &lt;= 1</label>
		</location>
		<location id="id19" x="0" y="455">
			<name x="20" y="442">pc12_iload_4</name>
			<label kind="invariant" x="-70" y="455">t &lt;= 1</label>
		</location>
		<location id="id20" x="0" y="520">
			<name x="20" y="507">pc14_iload_1</name>
			<label kind="invariant" x="-70" y="520">t &lt;= 1</label>
		</location>
		<location id="id21" x="0" y="585">
			<name x="20" y="572">pc15_ifcmpge_11</name>
			<label kind="invariant" x="-70" y="585">t &lt;= 1</label>
		</location>
		<location id="id22" x="0" y="650">
			<name x="20" y="637">pc18_new_java_lang_Exception</name>
			<label kind="invariant" x="-70" y="650">t &lt;= 1</label>
		</location>
		<location id="id23" x="0" y="715">
			<name x="20" y="702">pc21_dup</name>
			<label kind="invariant" x="-70" y="715">t &lt;= 1</label>
		</location>
		<location id="id24" x="0" y="780">
			<name x="20" y="767">pc22_invokespecial_void_java_lang_Exception_init_</name>
			<label kind="invariant" x="-70" y="780">t &lt;= 1</label>
		</location>
		<location id="id25" x="0" y="845">
			<name x="20" y="832">pc25_athrow</name>
			<label kind="invariant" x="-70" y="845">t &lt;= 1</label>
		</location>
		<location id="id26" x="0" y="910">
			<name x="20" y="897">pc26_aload_0</name>
			<label kind="invariant" x="-70" y="910">t &lt;= 1</label>
		</location>
		<location id="id27" x="0" y="975">
			<name x="20" y="962">pc27_invokespecial_bool_Example_check_</name>
			<label kind="invariant" x="-70" y="975">t &lt;= 1</label>
		</location>
		<location id="id28" x="0" y="1040">
			<name x="20" y="1027">pc30_iconst_0</name>
			<label kind="invariant" x="-70" y="1040">t &lt;= 1</label>
		</location>
		<location id="id29" x="0" y="1105">
			<name x="20" y="1092">pc31_ifcmpne_16</name>
			<label kind="invariant" x="-70" y="1105">t &lt;= 1</label>
		</location>
		<location id="id30" x="0" y="1170">
			<name x="20" y="1157">pc34_aload_0</name>
			<label kind="invariant" x="-70" y="1170">t &lt;= 1</label>
		</location>
		<location id="id31" x="0" y="1235">
			<name x="20" y="1222">pc35_invokespecial_int_Example_getTriesRemaining_</name>
			<label kind="invariant" x="-70" y="1235">t &lt;= 1</label>
		</location>
		<location id="id32" x="0" y="1300">
			<name x="20" y="1287">pc38_istore_3</name>
			<label kind="invariant" x="-70" y="1300">t &lt;= 1</label>
		</location>
		<location id="id33" x="0" y="1365">
			<name x="20" y="1352">pc39_new_java_lang_Exception</name>
			<label kind="invariant" x="-70" y="1365">t &lt;= 1</label>
		</location>
		<location id="id34" x="0" y="1430">
			<name x="20" y="1417">pc42_dup</name>
			<label kind="invariant" x="-70" y="1430">t &lt;= 1</label>
		</location>
		<location id="id35" x="0" y="1495">
			<name x="20" y="1482">pc43_invokespecial_void_java_lang_Exception_init_</name>
			<label kind="invariant" x="-70" y="1495">t &lt;= 1</label>
		</location>
		<location id="id36" x="0" y="1560">
			<name x="20" y="1547">pc46_athrow</name>
			<label kind="invariant" x="-70" y="1560">t &lt;= 1</label>
		</location>
		<location id="id37" x="0" y="1625">
			<name x="20" y="1612">pc47_return</name>
			<label kind="invariant" x="-70" y="1625">t &lt;= 1</label>
		</location>
		<location id="id38" x="200" y="351">
			<label kind="invariant" x="130" y="351">t &lt;= 5</label>
		</location>
		<location id="id39" x="200" y="806">
			<label kind="invariant" x="130" y="806">t &lt;= 5</label>
		</location>
		<location id="id40" x="200" y="1001">
			<label kind="invariant" x="130" y="1001">t &lt;= 5</label>
		</location>
		<location id="id41" x="200" y="1261">
			<label kind="invariant" x="130" y="1261">t &lt;= 5</label>
		</location>
		<location id="id42" x="200" y="1521">
			<label kind="invariant" x="130" y="1521">t &lt;= 5</label>
		</location>
		<init ref="id11"/>
		<transition>
			<source ref="id11"/>
			<target ref="id12"/>
			<label kind="guard" x="20" y="-65">t == 1</label>
			<label kind="synchronisation" x="20" y="-52">cExample_processVerifyPIN?</label>
			<label kind="assignment" x="20" y="-39">locs[0] = par0, t = 0</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id13"/>
			<label kind="guard" x="20" y="0">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="13">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id14"/>
			<label kind="guard" x="20" y="78">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="65">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id15"/>
			<label kind="guard" x="20" y="143">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="130">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id16"/>
			<label kind="guard" x="20" y="208">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="195">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id17"/>
			<label kind="guard" x="20" y="260">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="273">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id38"/>
			<label kind="guard" x="20" y="325">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="synchronisation" x="20" y="351">cExample_setIncomingAndReceive!</label>
			<label kind="assignment" x="20" y="338">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id38"/>
			<target ref="id38"/>
			<label kind="guard" x="20" y="351">t == 10</label>
			<nail x="170" y="321"/>
			<nail x="230" y="321"/>
		</transition>
		<transition>
			<source ref="id38"/>
			<target ref="id18"/>
			<label kind="synchronisation" x="20" y="351">cExample_setIncomingAndReceive?</label>
			<label kind="assignment" x="20" y="364">t = 0, os[osp] = par0, osp_inc()</label>
		</transition>
		<transition>
			<source ref="id38"/>
			<target ref="id11"/>
			<label kind="guard" x="20" y="351">exceptionOccurred == true</label>
			<label kind="assignment" x="20" y="364">osp = 0</label>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id19"/>
			<label kind="guard" x="20" y="403">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="390">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id20"/>
			<label kind="guard" x="20" y="468">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="455">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id21"/>
			<label kind="guard" x="20" y="533">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="520">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id22"/>
			<label kind="guard" x="20" y="585">t == 1 &amp;&amp; os[osp] &lt; os[osp - 1] &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="598">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id26"/>
			<label kind="guard" x="20" y="585">t == 1 &amp;&amp; os[osp] &gt;= os[osp - 1] &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="598">faultTime = 200</label>
			<nail x="-50" y="747"/>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id23"/>
			<label kind="guard" x="20" y="650">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="663">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id24"/>
			<label kind="guard" x="20" y="728">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="715">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id39"/>
			<label kind="guard" x="20" y="780">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="793">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id39"/>
			<target ref="id39"/>
			<label kind="guard" x="20" y="806">t == 10</label>
			<nail x="170" y="776"/>
			<nail x="230" y="776"/>
		</transition>
		<transition>
			<source ref="id39"/>
			<target ref="id25"/>
			<label kind="guard" x="20" y="806">t == 5</label>
			<label kind="assignment" x="20" y="819">t = 0</label>
		</transition>
		<transition>
			<source ref="id39"/>
			<target ref="id11"/>
			<label kind="guard" x="20" y="806">exceptionOccurred == true</label>
			<label kind="assignment" x="20" y="819">osp = 0</label>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id37"/>
			<label kind="guard" x="20" y="858">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="845">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id27"/>
			<label kind="guard" x="20" y="910">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="923">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id40"/>
			<label kind="guard" x="20" y="975">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="synchronisation" x="20" y="1001">cExample_check!</label>
			<label kind="assignment" x="20" y="988">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id40"/>
			<target ref="id40"/>
			<label kind="guard" x="20" y="1001">t == 10</label>
			<nail x="170" y="971"/>
			<nail x="230" y="971"/>
		</transition>
		<transition>
			<source ref="id40"/>
			<target ref="id28"/>
			<label kind="synchronisation" x="20" y="1001">cExample_check?</label>
			<label kind="assignment" x="20" y="1014">t = 0, os[osp] = par0, osp_inc()</label>
		</transition>
		<transition>
			<source ref="id40"/>
			<target ref="id11"/>
			<label kind="guard" x="20" y="1001">exceptionOccurred == true</label>
			<label kind="assignment" x="20" y="1014">osp = 0</label>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id29"/>
			<label kind="guard" x="20" y="1040">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="1053">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id37"/>
			<label kind="guard" x="20" y="1105">t == 1 &amp;&amp; os[osp - 1] != os[osp] &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="1118">faultTime = 200</label>
			<nail x="-50" y="1365"/>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id30"/>
			<label kind="guard" x="20" y="1105">t == 1 &amp;&amp; os[osp - 1] == os[osp] &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="1118">faultTime = 200</label>
			<nail x="-50" y="1137"/>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id31"/>
			<label kind="guard" x="20" y="1170">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="1183">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id41"/>
			<label kind="guard" x="20" y="1235">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="synchronisation" x="20" y="1261">cExample_getTriesRemaining!</label>
			<label kind="assignment" x="20" y="1248">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id41"/>
			<target ref="id41"/>
			<label kind="guard" x="20" y="1261">t == 10</label>
			<nail x="170" y="1231"/>
			<nail x="230" y="1231"/>
		</transition>
		<transition>
			<source ref="id41"/>
			<target ref="id32"/>
			<label kind="synchronisation" x="20" y="1261">cExample_getTriesRemaining?</label>
			<label kind="assignment" x="20" y="1274">t = 0, os[osp] = par0, osp_inc()</label>
		</transition>
		<transition>
			<source ref="id41"/>
			<target ref="id11"/>
			<label kind="guard" x="20" y="1261">exceptionOccurred == true</label>
			<label kind="assignment" x="20" y="1274">osp = 0</label>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id33"/>
			<label kind="guard" x="20" y="1313">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="1300">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id33"/>
			<target ref="id34"/>
			<label kind="guard" x="20" y="1365">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="1378">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id34"/>
			<target ref="id35"/>
			<label kind="guard" x="20" y="1443">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="1430">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id35"/>
			<target ref="id42"/>
			<label kind="guard" x="20" y="1495">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="1508">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id42"/>
			<target ref="id42"/>
			<label kind="guard" x="20" y="1521">t == 10</label>
			<nail x="170" y="1491"/>
			<nail x="230" y="1491"/>
		</transition>
		<transition>
			<source ref="id42"/>
			<target ref="id36"/>
			<label kind="guard" x="20" y="1521">t == 5</label>
			<label kind="assignment" x="20" y="1534">t = 0</label>
		</transition>
		<transition>
			<source ref="id42"/>
			<target ref="id11"/>
			<label kind="guard" x="20" y="1521">exceptionOccurred == true</label>
			<label kind="assignment" x="20" y="1534">osp = 0</label>
		</transition>
		<transition>
			<source ref="id36"/>
			<target ref="id37"/>
			<label kind="guard" x="20" y="1573">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="1560">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id37"/>
			<target ref="id11"/>
			<label kind="guard" x="20" y="1625">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="synchronisation" x="20" y="1651">cExample_processVerifyPIN!</label>
			<label kind="assignment" x="20" y="1638">faultTime = 200</label>
			<nail x="-100" y="780"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id12"/>
			<label kind="select" x="20" y="26">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="0">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="13">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="-30"/>
			<nail x="30" y="-30"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id13"/>
			<label kind="select" x="20" y="91">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="65">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="78">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="35"/>
			<nail x="30" y="35"/>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id14"/>
			<label kind="select" x="20" y="156">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="130">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="143">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="100"/>
			<nail x="30" y="100"/>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id15"/>
			<label kind="select" x="20" y="221">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="195">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="208">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="165"/>
			<nail x="30" y="165"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id16"/>
			<label kind="select" x="20" y="286">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="260">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="273">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="230"/>
			<nail x="30" y="230"/>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id17"/>
			<label kind="select" x="20" y="351">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="325">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="338">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="295"/>
			<nail x="30" y="295"/>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id18"/>
			<label kind="select" x="20" y="416">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="390">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="403">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="360"/>
			<nail x="30" y="360"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id19"/>
			<label kind="select" x="20" y="481">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="455">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="468">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="425"/>
			<nail x="30" y="425"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id20"/>
			<label kind="select" x="20" y="546">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="520">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="533">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="490"/>
			<nail x="30" y="490"/>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id21"/>
			<label kind="select" x="20" y="611">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="585">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="598">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="555"/>
			<nail x="30" y="555"/>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id22"/>
			<label kind="select" x="20" y="676">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="650">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="663">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="620"/>
			<nail x="30" y="620"/>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id23"/>
			<label kind="select" x="20" y="741">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="715">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="728">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="685"/>
			<nail x="30" y="685"/>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id24"/>
			<label kind="select" x="20" y="806">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="780">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="793">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="750"/>
			<nail x="30" y="750"/>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id25"/>
			<label kind="select" x="20" y="871">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="845">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="858">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="815"/>
			<nail x="30" y="815"/>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id26"/>
			<label kind="select" x="20" y="936">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="910">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="923">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="880"/>
			<nail x="30" y="880"/>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id27"/>
			<label kind="select" x="20" y="1001">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="975">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="988">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="945"/>
			<nail x="30" y="945"/>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id28"/>
			<label kind="select" x="20" y="1066">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="1040">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="1053">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="1010"/>
			<nail x="30" y="1010"/>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id29"/>
			<label kind="select" x="20" y="1131">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="1105">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="1118">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="1075"/>
			<nail x="30" y="1075"/>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id30"/>
			<label kind="select" x="20" y="1196">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="1170">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="1183">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="1140"/>
			<nail x="30" y="1140"/>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id31"/>
			<label kind="select" x="20" y="1261">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="1235">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="1248">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="1205"/>
			<nail x="30" y="1205"/>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id32"/>
			<label kind="select" x="20" y="1326">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="1300">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="1313">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="1270"/>
			<nail x="30" y="1270"/>
		</transition>
		<transition>
			<source ref="id33"/>
			<target ref="id33"/>
			<label kind="select" x="20" y="1391">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="1365">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="1378">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="1335"/>
			<nail x="30" y="1335"/>
		</transition>
		<transition>
			<source ref="id34"/>
			<target ref="id34"/>
			<label kind="select" x="20" y="1456">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="1430">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="1443">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="1400"/>
			<nail x="30" y="1400"/>
		</transition>
		<transition>
			<source ref="id35"/>
			<target ref="id35"/>
			<label kind="select" x="20" y="1521">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="1495">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="1508">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="1465"/>
			<nail x="30" y="1465"/>
		</transition>
		<transition>
			<source ref="id36"/>
			<target ref="id36"/>
			<label kind="select" x="20" y="1586">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="1560">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="1573">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="1530"/>
			<nail x="30" y="1530"/>
		</transition>
		<transition>
			<source ref="id37"/>
			<target ref="id37"/>
			<label kind="select" x="20" y="1651">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="1625">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="1638">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="1595"/>
			<nail x="30" y="1595"/>
		</transition>
	</template>
	<template>
		<name>Example_main</name>
		<declaration>const int os_size = 10;
const int locs_size = 10;
int os[os_size]; 
int osp = 0;
int locs[locs_size];

void osp_inc(){
    if (osp &gt;= os_size - 1){
        opstack_fault = true;
        return;
    }
    osp++;
    return;
}

void osp_dec(int i){
    if (osp &lt; i){
        opstack_fault = true;
        return;
    }
    osp -= i;
    return;
}

bool ifcmpme(){
    if (osp &gt; 1){
        return os[osp-2] &gt;= os[osp - 1];
    }
    return false;
}

bool ifcmpeq(){
    if (osp &gt; 1){
        return os[osp-2] == os[osp - 1];
    }
    return false;
}

bool ifeq(){
    if (osp &gt; 1){
        return os[osp - 1] == 0;
    }
    return false;
}
</declaration>
		<location id="id43" x="0" y="-65">
			<name x="20" y="-78">main</name>
			<label kind="exponentialrate" x="-70" y="-65">1</label>
			<urgent/>
		</location>
		<location id="id44" x="0" y="0">
			<name x="20" y="-13">pc0_new_Example</name>
			<label kind="invariant" x="-70" y="0">t &lt;= 1</label>
		</location>
		<location id="id45" x="0" y="65">
			<name x="20" y="52">pc3_dup</name>
			<label kind="invariant" x="-70" y="65">t &lt;= 1</label>
		</location>
		<location id="id46" x="0" y="130">
			<name x="20" y="117">pc4_invokespecial_void_Example_init_</name>
			<label kind="invariant" x="-70" y="130">t &lt;= 1</label>
		</location>
		<location id="id47" x="0" y="195">
			<name x="20" y="182">pc7_astore_1</name>
			<label kind="invariant" x="-70" y="195">t &lt;= 1</label>
		</location>
		<location id="id48" x="0" y="260">
			<name x="20" y="247">pc8_goto_4</name>
			<label kind="invariant" x="-70" y="260">t &lt;= 1</label>
		</location>
		<location id="id49" x="0" y="325">
			<name x="20" y="312">pc11_astore_1</name>
			<label kind="invariant" x="-70" y="325">t &lt;= 1</label>
		</location>
		<location id="id50" x="0" y="390">
			<name x="20" y="377">pc12_return</name>
			<label kind="invariant" x="-70" y="390">t &lt;= 1</label>
		</location>
		<location id="id51" x="200" y="156">
			<label kind="invariant" x="130" y="156">t &lt;= 5</label>
		</location>
		<location id="id52" x="200" y="416">
			<label kind="exponentialrate" x="0" y="0">1</label>
		</location>
		<init ref="id43"/>
		<transition>
			<source ref="id43"/>
			<target ref="id44"/>
			<label kind="assignment" x="20" y="-65">t = 0</label>
		</transition>
		<transition>
			<source ref="id44"/>
			<target ref="id45"/>
			<label kind="guard" x="20" y="0">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="13">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id45"/>
			<target ref="id46"/>
			<label kind="guard" x="20" y="78">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="65">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id46"/>
			<target ref="id51"/>
			<label kind="guard" x="20" y="130">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="synchronisation" x="20" y="156">cExample_Example!</label>
			<label kind="assignment" x="20" y="143">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id51"/>
			<target ref="id51"/>
			<label kind="guard" x="20" y="156">t == 10</label>
			<nail x="170" y="126"/>
			<nail x="230" y="126"/>
		</transition>
		<transition>
			<source ref="id51"/>
			<target ref="id47"/>
			<label kind="synchronisation" x="20" y="156">cExample_Example?</label>
			<label kind="assignment" x="20" y="169">t = 0</label>
		</transition>
		<transition>
			<source ref="id51"/>
			<target ref="id49"/>
			<label kind="guard" x="20" y="156">exceptionOccurred == true</label>
			<label kind="assignment" x="20" y="169">osp = 0</label>
		</transition>
		<transition>
			<source ref="id47"/>
			<target ref="id48"/>
			<label kind="guard" x="20" y="208">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="195">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id48"/>
			<target ref="id50"/>
			<label kind="guard" x="20" y="273">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="260">faultTime = 200</label>
			<nail x="-50" y="325"/>
		</transition>
		<transition>
			<source ref="id49"/>
			<target ref="id50"/>
			<label kind="guard" x="20" y="338">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="325">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id50"/>
			<target ref="id52"/>
			<label kind="guard" x="20" y="390">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="synchronisation" x="20" y="416">cExample_main!</label>
			<label kind="assignment" x="20" y="403">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id44"/>
			<target ref="id44"/>
			<label kind="select" x="20" y="26">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="0">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="13">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="-30"/>
			<nail x="30" y="-30"/>
		</transition>
		<transition>
			<source ref="id45"/>
			<target ref="id45"/>
			<label kind="select" x="20" y="91">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="65">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="78">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="35"/>
			<nail x="30" y="35"/>
		</transition>
		<transition>
			<source ref="id46"/>
			<target ref="id46"/>
			<label kind="select" x="20" y="156">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="130">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="143">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="100"/>
			<nail x="30" y="100"/>
		</transition>
		<transition>
			<source ref="id47"/>
			<target ref="id47"/>
			<label kind="select" x="20" y="221">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="195">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="208">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="165"/>
			<nail x="30" y="165"/>
		</transition>
		<transition>
			<source ref="id48"/>
			<target ref="id48"/>
			<label kind="select" x="20" y="286">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="260">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="273">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="230"/>
			<nail x="30" y="230"/>
		</transition>
		<transition>
			<source ref="id49"/>
			<target ref="id49"/>
			<label kind="select" x="20" y="351">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="325">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="338">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="295"/>
			<nail x="30" y="295"/>
		</transition>
		<transition>
			<source ref="id50"/>
			<target ref="id50"/>
			<label kind="select" x="20" y="416">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="390">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="403">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="360"/>
			<nail x="30" y="360"/>
		</transition>
	</template>
	<template>
		<name>Example_getTriesRemaining</name>
		<declaration>const int os_size = 10;
const int locs_size = 10;
int os[os_size]; 
int osp = 0;
int locs[locs_size];

void osp_inc(){
    if (osp &gt;= os_size - 1){
        opstack_fault = true;
        return;
    }
    osp++;
    return;
}

void osp_dec(int i){
    if (osp &lt; i){
        opstack_fault = true;
        return;
    }
    osp -= i;
    return;
}

bool ifcmpme(){
    if (osp &gt; 1){
        return os[osp-2] &gt;= os[osp - 1];
    }
    return false;
}

bool ifcmpeq(){
    if (osp &gt; 1){
        return os[osp-2] == os[osp - 1];
    }
    return false;
}

bool ifeq(){
    if (osp &gt; 1){
        return os[osp - 1] == 0;
    }
    return false;
}
</declaration>
		<location id="id53" x="0" y="-161">
			<name x="20" y="-174">getTriesRemaining</name>
			<label kind="exponentialrate" x="-34" y="-170">1</label>
		</location>
		<location id="id54" x="0" y="8">
			<name x="17" y="0">pc0_iconst_2</name>
			<label kind="invariant" x="-53" y="-1">t &lt;= 1</label>
		</location>
		<location id="id55" x="0" y="187">
			<name x="17" y="187">pc1_ireturn</name>
			<label kind="invariant" x="-85" y="187">t &lt;= 1</label>
		</location>
		<init ref="id53"/>
		<transition>
			<source ref="id53"/>
			<target ref="id54"/>
			<label kind="guard" x="17" y="-119">t == 1</label>
			<label kind="synchronisation" x="17" y="-136">cExample_getTriesRemaining?</label>
			<label kind="assignment" x="17" y="-102">locs[0] = par0, t = 0</label>
		</transition>
		<transition>
			<source ref="id54"/>
			<target ref="id55"/>
			<label kind="guard" x="8" y="68">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="8" y="85">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id55"/>
			<target ref="id53"/>
			<label kind="guard" x="-311" y="-28">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="synchronisation" x="-311" y="-2">cExample_getTriesRemaining!</label>
			<label kind="assignment" x="-311" y="-15">faultTime = 200</label>
			<nail x="-100" y="0"/>
		</transition>
		<transition>
			<source ref="id54"/>
			<target ref="id54"/>
			<label kind="select" x="34" y="-17">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="34" y="-34">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="34" y="-51">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="-22"/>
			<nail x="30" y="-22"/>
		</transition>
		<transition>
			<source ref="id55"/>
			<target ref="id55"/>
			<label kind="select" x="34" y="170">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="34" y="136">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="34" y="153">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="157"/>
			<nail x="30" y="157"/>
		</transition>
	</template>
	<template>
		<name>Example_setIncomingAndReceive</name>
		<declaration>const int os_size = 10;
const int locs_size = 10;
int os[os_size]; 
int osp = 0;
int locs[locs_size];

void osp_inc(){
    if (osp &gt;= os_size - 1){
        opstack_fault = true;
        return;
    }
    osp++;
    return;
}

void osp_dec(int i){
    if (osp &lt; i){
        opstack_fault = true;
        return;
    }
    osp -= i;
    return;
}

bool ifcmpme(){
    if (osp &gt; 1){
        return os[osp-2] &gt;= os[osp - 1];
    }
    return false;
}

bool ifcmpeq(){
    if (osp &gt; 1){
        return os[osp-2] == os[osp - 1];
    }
    return false;
}

bool ifeq(){
    if (osp &gt; 1){
        return os[osp - 1] == 0;
    }
    return false;
}</declaration>
		<location id="id56" x="0" y="-65">
			<name x="20" y="-78">setIncomingAndReceive</name>
			<label kind="exponentialrate" x="-70" y="-65">1</label>
		</location>
		<location id="id57" x="0" y="0">
			<name x="20" y="-13">pc0_iconst_5</name>
			<label kind="invariant" x="-70" y="0">t &lt;= 1</label>
		</location>
		<location id="id58" x="0" y="65">
			<name x="20" y="52">pc1_ireturn</name>
			<label kind="invariant" x="-70" y="65">t &lt;= 1</label>
		</location>
		<init ref="id56"/>
		<transition>
			<source ref="id56"/>
			<target ref="id57"/>
			<label kind="guard" x="20" y="-65">t == 1</label>
			<label kind="synchronisation" x="20" y="-52">cExample_setIncomingAndReceive?</label>
			<label kind="assignment" x="20" y="-39">locs[0] = par0, t = 0</label>
		</transition>
		<transition>
			<source ref="id57"/>
			<target ref="id58"/>
			<label kind="guard" x="20" y="0">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="assignment" x="20" y="13">faultTime = 200</label>
		</transition>
		<transition>
			<source ref="id58"/>
			<target ref="id56"/>
			<label kind="guard" x="20" y="65">t == 1 &amp;&amp; faultTime &gt; globalClock</label>
			<label kind="synchronisation" x="20" y="91">cExample_setIncomingAndReceive!</label>
			<label kind="assignment" x="20" y="78">faultTime = 200</label>
			<nail x="-100" y="0"/>
		</transition>
		<transition>
			<source ref="id57"/>
			<target ref="id57"/>
			<label kind="select" x="20" y="26">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="0">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="13">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="-30"/>
			<nail x="30" y="-30"/>
		</transition>
		<transition>
			<source ref="id58"/>
			<target ref="id58"/>
			<label kind="select" x="20" y="91">osPos:int[0,os_size - 1], osBitPos:int[0,7]</label>
			<label kind="guard" x="20" y="65">faultTime &lt;= globalClock</label>
			<label kind="assignment" x="20" y="78">os[osPos] ^= 1 &lt;&lt; osBitPos</label>
			<nail x="-30" y="35"/>
			<nail x="30" y="35"/>
		</transition>
	</template>
	<template>
		<name>Virtual</name>
		<declaration>

int osPos;
int osBitPos;
</declaration>
		<location id="id59" x="0" y="0">
			<name x="20" y="-13">Invoke</name>
			<label kind="exponentialrate" x="130" y="0">1</label>
		</location>
		<location id="id60" x="0" y="100">
			<name x="20" y="87">Resolver</name>
			<label kind="exponentialrate" x="130" y="100">1</label>
			<urgent/>
		</location>
		<location id="id61" x="-100" y="300">
			<name x="-80" y="287">Returner</name>
			<label kind="exponentialrate" x="130" y="300">1</label>
			<urgent/>
		</location>
		<init ref="id59"/>
		<transition>
			<source ref="id59"/>
			<target ref="id60"/>
			<label kind="synchronisation" x="20" y="0">cVirtual?</label>
			<label kind="assignment" x="20" y="13">clID = H[par0]</label>
		</transition>
		<transition>
			<source ref="id61"/>
			<target ref="id59"/>
			<label kind="synchronisation" x="20" y="300">cVirtual!</label>
		</transition>
		<transition>
			<source ref="id60"/>
			<target ref="id60"/>
			<label kind="assignment" x="20" y="113">clID = classHierarchy[clID]</label>
			<nail x="-30" y="70"/>
			<nail x="30" y="70"/>
		</transition>
	</template>
	<template>
		<name>FaultInj</name>
		<location id="id62" x="-17" y="-85">
		</location>
		<location id="id63" x="-144" y="-85">
		</location>
		<init ref="id63"/>
		<transition>
			<source ref="id63"/>
			<target ref="id62"/>
			<label kind="select" x="-110" y="-51">i:int[0,9999]</label>
			<label kind="assignment" x="-110" y="-68">faultTime = i</label>
		</transition>
	</template>
	<system>Fault = FaultInj();
iExample_check = Example_check();
iExample_Example = Example_Example();
iExample_processVerifyPIN = Example_processVerifyPIN();
iExample_main = Example_main();
iExample_getTriesRemaining = Example_getTriesRemaining();
iExample_setIncomingAndReceive = Example_setIncomingAndReceive();
iVirtual = Virtual();

system Fault, iExample_check, iExample_Example, iExample_processVerifyPIN, iExample_main, iExample_getTriesRemaining, iExample_setIncomingAndReceive, iVirtual;</system>
	<queries>
		<query>
			<formula>queriesqueryPr[&lt;= 50] (&lt;&gt; done)
			</formula>
			<comment>
			</comment>
		</query>
	</queries>
</nta>
